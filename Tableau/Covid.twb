<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xml:base='https://prod-useast-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapAttribution2 />
    <MapboxVectorBuiltInAndUserStyles />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneFriendlyName />
  </document-format-change-manifest>
  <repository-location id='Covid2' path='/t/adarus/workbooks' revision='1.0' site='adarus' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ProcessedDataTSBL (Covid)' inline='true' name='federated.19syv8g066c4kq1420nj41gqp6o2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='i8pkcpqmt1.database.windows.net' name='sqlserver.00bpdlf1r9jzmw150ulen1mwpf7x'>
            <connection authentication='sqlserver' class='sqlserver' dbname='Covid' minimum-driver-version='SQL Server Native Client 10.0' odbc-native-protocol='yes' one-time-sql='' server='i8pkcpqmt1.database.windows.net' username='bladmin' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.00bpdlf1r9jzmw150ulen1mwpf7x' name='ProcessedDataTSBL' table='[dbo].[ProcessedDataTSBL]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>StateEquivalent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[StateEquivalent]</local-name>
            <parent-name>[ProcessedDataTSBL]</parent-name>
            <remote-alias>StateEquivalent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[ProcessedDataTSBL]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[ProcessedDataTSBL]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>5</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[ProcessedDataTSBL]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>5</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[ProcessedDataTSBL]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[ProcessedDataTSBL]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[ProcessedDataTSBL]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Combined_KeyBL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Combined_KeyBL]</local-name>
            <parent-name>[ProcessedDataTSBL]</parent-name>
            <remote-alias>Combined_KeyBL</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ValueDiff</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ValueDiff]</local-name>
            <parent-name>[ProcessedDataTSBL]</parent-name>
            <remote-alias>ValueDiff</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>5</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ValueDiff7</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ValueDiff7]</local-name>
            <parent-name>[ProcessedDataTSBL]</parent-name>
            <remote-alias>ValueDiff7</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>5</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Combined KeyBL' datatype='string' name='[Combined_KeyBL]' role='dimension' type='nominal' />
      <column caption='Combined Key' datatype='string' name='[Combined_Key]' role='dimension' type='nominal' />
      <column caption='Confirmed Diff' datatype='integer' name='[ConfirmedDiff]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Deaths Diff' datatype='integer' name='[DeathsDiff]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='Last Update' datatype='datetime' name='[Last_Update]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Recovered Diff' datatype='integer' name='[RecoveredDiff]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
      <column caption='State Equivalent' datatype='string' name='[StateEquivalent]' role='dimension' type='nominal' />
      <column caption='Value Diff' datatype='real' name='[ValueDiff]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Avg' name='[avg:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Count' name='[cnt:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Max' name='[max:Recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Value]' derivation='Max' name='[max:Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Lat]' derivation='None' name='[none:Lat:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Long]' derivation='None' name='[none:Long:ok]' pivot='key' type='ordinal' />
      <column-instance column='[StateEquivalent]' derivation='None' name='[none:StateEquivalent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country Region)' hidden='true' name='[Action (Country Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Lat,Long)' hidden='true' name='[Action (Lat,Long)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Lat:ok]' />
          <groupfilter function='level-members' level='[none:Long:ok]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='//mac/Home/Documents/My Tableau Repository/Datasources/ProcessedDataTSBL (Covid).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/28/2020 04:40:33 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='ProcessedDataTSBL (Covid)' increment-value='%null%' refresh-type='create' rows-inserted='74976' timestamp-start='2020-04-28 04:40:33.653' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>StateEquivalent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[StateEquivalent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>StateEquivalent</remote-alias>
              <ordinal>0</ordinal>
              <family>ProcessedDataTSBL</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>131</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>1</ordinal>
              <family>ProcessedDataTSBL</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>312</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Long</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Long</remote-alias>
              <ordinal>2</ordinal>
              <family>ProcessedDataTSBL</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>415</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lat</remote-alias>
              <ordinal>3</ordinal>
              <family>ProcessedDataTSBL</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>419</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>4</ordinal>
              <family>ProcessedDataTSBL</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>96</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Type</remote-alias>
              <ordinal>5</ordinal>
              <family>ProcessedDataTSBL</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Value</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Value</remote-alias>
              <ordinal>6</ordinal>
              <family>ProcessedDataTSBL</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1981</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Combined_KeyBL</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Combined_KeyBL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Combined_KeyBL</remote-alias>
              <ordinal>7</ordinal>
              <family>ProcessedDataTSBL</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>441</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ValueDiff</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ValueDiff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ValueDiff</remote-alias>
              <ordinal>8</ordinal>
              <family>ProcessedDataTSBL</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>605</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ValueDiff7</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ValueDiff7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ValueDiff7</remote-alias>
              <ordinal>9</ordinal>
              <family>ProcessedDataTSBL</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1136</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.455679' measure-ordering='alphabetic' measure-percentage='0.544321' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19syv8g066c4kq1420nj41gqp6o2].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.19syv8g066c4kq1420nj41gqp6o2].[max:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.19syv8g066c4kq1420nj41gqp6o2].[sum:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.19syv8g066c4kq1420nj41gqp6o2].[max:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.19syv8g066c4kq1420nj41gqp6o2].[max:Value:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.19syv8g066c4kq1420nj41gqp6o2].[none:StateEquivalent:nk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.19syv8g066c4kq1420nj41gqp6o2].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.19syv8g066c4kq1420nj41gqp6o2].[sum:Value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.19syv8g066c4kq1420nj41gqp6o2].[avg:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.19syv8g066c4kq1420nj41gqp6o2].[cnt:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.19syv8g066c4kq1420nj41gqp6o2].[max:Confirmed:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cruise Ship&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macao SAR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taipei and environs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot; Azerbaijan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;occupied Palestinian territory&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;The Gambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='DailyDataAllBL (Covid)' inline='true' name='federated.05aaxa30wz6ojr1f84ra818as4ls' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='i8pkcpqmt1.database.windows.net' name='sqlserver.081azop0r2jbez16m60vs12t4e6x'>
            <connection authentication='sqlserver' class='sqlserver' dbname='Covid' odbc-native-protocol='yes' one-time-sql='' port='0' server='i8pkcpqmt1.database.windows.net' username='bladmin' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.081azop0r2jbez16m60vs12t4e6x' name='DailyDataAllBL' table='[dbo].[DailyDataAllBL]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Admin2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Admin2]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>Admin2</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province_State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province_State]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>Province_State</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Region]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>Country_Region</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last_Update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Last_Update]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>Last_Update</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>5</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>5</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Combined_Key</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Combined_Key]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>Combined_Key</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>150</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Combined_KeyBL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Combined_KeyBL]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>Combined_KeyBL</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedDiff</remote-name>
            <remote-type>3</remote-type>
            <local-name>[ConfirmedDiff]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>ConfirmedDiff</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathsDiff</remote-name>
            <remote-type>3</remote-type>
            <local-name>[DeathsDiff]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>DeathsDiff</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RecoveredDiff</remote-name>
            <remote-type>3</remote-type>
            <local-name>[RecoveredDiff]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>RecoveredDiff</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveDiff</remote-name>
            <remote-type>3</remote-type>
            <local-name>[ActiveDiff]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>ActiveDiff</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedDiffP</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ConfirmedDiffP]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>ConfirmedDiffP</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>5</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathsDiffP</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DeathsDiffP]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>DeathsDiffP</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>5</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RecoveredDiffP</remote-name>
            <remote-type>131</remote-type>
            <local-name>[RecoveredDiffP]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>RecoveredDiffP</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>5</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveDiffP</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ActiveDiffP]</local-name>
            <parent-name>[DailyDataAllBL]</parent-name>
            <remote-alias>ActiveDiffP</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <scale>5</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Active Diff' datatype='integer' name='[ActiveDiff]' role='measure' type='quantitative' />
      <column caption='MaxDate' datatype='datetime' name='[Calculation_418975539501346818]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='MAX([Last_Update])' />
      </column>
      <column caption='Days LOD' datatype='datetime' name='[Calculation_418975539564253188]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{FIXED [Last_Update]: MAX([Last_Update])}' />
      </column>
      <column caption='Include/Exclude' datatype='string' name='[Calculation_418975539566731269]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// Filter out records that aren&apos;t the max days for a given ID.&#10;IF [Last_Update]=[Calculation_418975539564253188] THEN&#10;    &quot;Include&quot;&#10;ELSE&#10;    &quot;Exclude&quot;&#10;END' />
      </column>
      <column caption='ColorFormat' datatype='string' name='[Calculation_418975539706404870]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Confirmed] &gt;0  THEN &apos;Red&apos; ELSE &apos;blue&apos; END' />
      </column>
      <column caption='Combined KeyBL' datatype='string' name='[Combined_KeyBL]' role='dimension' type='nominal' />
      <column caption='Combined Key' datatype='string' name='[Combined_Key]' role='dimension' type='nominal' />
      <column caption='Confirmed Diff' datatype='integer' name='[ConfirmedDiff]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Deaths Diff' datatype='integer' name='[DeathsDiff]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='string' name='[FIPS]' role='dimension' type='nominal' />
      <column caption='Last Update' datatype='datetime' name='[Last_Update]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Lat1' datatype='real' name='[Lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Long1' datatype='real' name='[Long]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Recovered Diff' datatype='integer' name='[RecoveredDiff]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Avg' name='[avg:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Count' name='[cnt:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Max' name='[max:Recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_418975539706404870]' derivation='None' name='[none:Calculation_418975539706404870:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Lat]' derivation='None' name='[none:Lat:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Long]' derivation='None' name='[none:Long:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Last_Update]' derivation='Year' name='[yr:Last_Update:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country Region)' hidden='true' name='[Action (Country Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country_Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country_Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Lat,Long)' hidden='true' name='[Action (Lat,Long)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Lat:ok]' />
          <groupfilter function='level-members' level='[none:Long:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country_Region, Province_State'>
          <field>[Country_Region]</field>
          <field>[Province_State]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='//mac/Home/Documents/My Tableau Repository/Datasources/DailyDataAllBL (Covid).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/14/2020 01:08:31 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='DailyDataAllBL (Covid)' increment-value='%null%' refresh-type='create' rows-inserted='65413' timestamp-start='2020-04-14 13:08:31.889' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>FIPS</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FIPS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FIPS</remote-alias>
              <ordinal>0</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8021</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Admin2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Admin2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Admin2</remote-alias>
              <ordinal>1</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3798</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Province_State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Province_State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Province_State</remote-alias>
              <ordinal>2</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>390</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country_Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country_Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country_Region</remote-alias>
              <ordinal>3</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>496</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Last_Update</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Last_Update]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Last_Update</remote-alias>
              <ordinal>4</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1039</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lat</remote-alias>
              <ordinal>5</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8078</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Long</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Long</remote-alias>
              <ordinal>6</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8078</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Confirmed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Confirmed</remote-alias>
              <ordinal>7</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1423</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>8</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>358</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Recovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Recovered</remote-alias>
              <ordinal>9</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1170</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Active</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Active]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Active</remote-alias>
              <ordinal>10</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1518</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Combined_Key</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Combined_Key]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Combined_Key</remote-alias>
              <ordinal>11</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8121</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Combined_KeyBL</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Combined_KeyBL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Combined_KeyBL</remote-alias>
              <ordinal>12</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>884</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ConfirmedDiff</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ConfirmedDiff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ConfirmedDiff</remote-alias>
              <ordinal>13</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1042</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathsDiff</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DeathsDiff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathsDiff</remote-alias>
              <ordinal>14</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>262</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RecoveredDiff</remote-name>
              <remote-type>20</remote-type>
              <local-name>[RecoveredDiff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RecoveredDiff</remote-alias>
              <ordinal>15</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>904</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ActiveDiff</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ActiveDiff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ActiveDiff</remote-alias>
              <ordinal>16</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>689</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ConfirmedDiffP</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ConfirmedDiffP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ConfirmedDiffP</remote-alias>
              <ordinal>17</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3201</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathsDiffP</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathsDiffP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathsDiffP</remote-alias>
              <ordinal>18</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>867</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RecoveredDiffP</remote-name>
              <remote-type>5</remote-type>
              <local-name>[RecoveredDiffP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RecoveredDiffP</remote-alias>
              <ordinal>19</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2823</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ActiveDiffP</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ActiveDiffP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ActiveDiffP</remote-alias>
              <ordinal>20</ordinal>
              <family>DailyDataAllBL</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.473755' measure-ordering='alphabetic' measure-percentage='0.526245' rowDisplayCount='1000' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_418975539706404870:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;blue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Red&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[sum:Confirmed:ok]' type='palette'>
            <map to='#499894'>
              <bucket>10</bucket>
            </map>
            <map to='#499894'>
              <bucket>36</bucket>
            </map>
            <map to='#499894'>
              <bucket>110</bucket>
            </map>
            <map to='#499894'>
              <bucket>330</bucket>
            </map>
            <map to='#499894'>
              <bucket>589</bucket>
            </map>
            <map to='#499894'>
              <bucket>1289</bucket>
            </map>
            <map to='#499894'>
              <bucket>2990</bucket>
            </map>
            <map to='#499894'>
              <bucket>7513</bucket>
            </map>
            <map to='#499894'>
              <bucket>143626</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>23</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>73</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>250</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>456</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>921</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2223</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>5569</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>24983</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>30</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>93</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>264</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>539</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1124</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2528</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>6211</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>67803</bucket>
            </map>
            <map to='#79706e'>
              <bucket>14</bucket>
            </map>
            <map to='#79706e'>
              <bucket>44</bucket>
            </map>
            <map to='#79706e'>
              <bucket>124</bucket>
            </map>
            <map to='#79706e'>
              <bucket>372</bucket>
            </map>
            <map to='#79706e'>
              <bucket>701</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1648</bucket>
            </map>
            <map to='#79706e'>
              <bucket>3293</bucket>
            </map>
            <map to='#79706e'>
              <bucket>5830</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10131</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>11</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>37</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>115</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>333</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>618</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1374</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>3115</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>8042</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>153222</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>7</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>31</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>95</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>280</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>564</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1207</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2605</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6574</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>20654</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>87028</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>21</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>63</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>194</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>443</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>887</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1934</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>5202</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>21762</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>24</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>74</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>252</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>457</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>926</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2349</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>5575</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>42282</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>18</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>56</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>184</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>409</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>781</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1892</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>4667</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>13956</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>8</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>32</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>103</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>288</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>582</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1232</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2773</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>6725</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>21903</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>117749</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>15</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>45</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>135</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>378</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>706</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1666</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>4076</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10423</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>76189</bucket>
            </map>
            <map to='#d37295'>
              <bucket>16</bucket>
            </map>
            <map to='#d37295'>
              <bucket>47</bucket>
            </map>
            <map to='#d37295'>
              <bucket>171</bucket>
            </map>
            <map to='#d37295'>
              <bucket>380</bucket>
            </map>
            <map to='#d37295'>
              <bucket>712</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1699</bucket>
            </map>
            <map to='#d37295'>
              <bucket>4228</bucket>
            </map>
            <map to='#d37295'>
              <bucket>6108</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10912</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>19</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>60</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>190</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>410</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>858</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1910</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>4965</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>18092</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>461437</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>22</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>66</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>218</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>444</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>910</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1955</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>5256</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>24051</bucket>
            </map>
            <map to='#e15759'>
              <bucket>12</bucket>
            </map>
            <map to='#e15759'>
              <bucket>39</bucket>
            </map>
            <map to='#e15759'>
              <bucket>119</bucket>
            </map>
            <map to='#e15759'>
              <bucket>337</bucket>
            </map>
            <map to='#e15759'>
              <bucket>643</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1407</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3181</bucket>
            </map>
            <map to='#e15759'>
              <bucket>9141</bucket>
            </map>
            <map to='#e15759'>
              <bucket>65872</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>9</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>33</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>109</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>314</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>583</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1239</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2867</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>7478</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>118181</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>25</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>78</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>255</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>484</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>955</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2376</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5635</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>65077</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>17</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>53</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>180</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>382</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>730</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1795</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>4489</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>13244</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>118781</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>13</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>41</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>120</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>343</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>663</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>1486</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>3287</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>9968</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>26</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>84</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>263</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>515</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>980</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2423</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>5972</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>66220</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Last_Update:ok]' type='palette'>
            <map to='#e15759'>
              <bucket>2020</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05aaxa30wz6ojr1f84ra818as4ls].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.05aaxa30wz6ojr1f84ra818as4ls].[max:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.05aaxa30wz6ojr1f84ra818as4ls].[sum:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.05aaxa30wz6ojr1f84ra818as4ls].[max:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.05aaxa30wz6ojr1f84ra818as4ls].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05aaxa30wz6ojr1f84ra818as4ls].[avg:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05aaxa30wz6ojr1f84ra818as4ls].[cnt:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05aaxa30wz6ojr1f84ra818as4ls].[max:Confirmed:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country_Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cruise Ship&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macao SAR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taipei and environs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot; Azerbaijan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;occupied Palestinian territory&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;The Gambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='alphabetical-order' />
    </datasource>
    <datasource caption='ProcessedDataAll (Covid)' inline='true' name='federated.14d300n1jhhc8a17mckyb0krrjw0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='i8pkcpqmt1.database.windows.net' name='sqlserver.05h5jaw0gyzzv517vr6e61aa48b2'>
            <connection authentication='sqlserver' class='sqlserver' dbname='Covid' minimum-driver-version='SQL Server Native Client 10.0' odbc-native-protocol='yes' one-time-sql='' server='i8pkcpqmt1.database.windows.net' username='bladmin' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.05h5jaw0gyzzv517vr6e61aa48b2' name='ProcessedDataAll' table='[dbo].[ProcessedDataAll]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>StateEquivalent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[StateEquivalent]</local-name>
            <parent-name>[ProcessedDataAll]</parent-name>
            <remote-alias>StateEquivalent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[ProcessedDataAll]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[ProcessedDataAll]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>5</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[ProcessedDataAll]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>5</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[ProcessedDataAll]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[ProcessedDataAll]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[ProcessedDataAll]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Combined_KeyBL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Combined_KeyBL]</local-name>
            <parent-name>[ProcessedDataAll]</parent-name>
            <remote-alias>Combined_KeyBL</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>150</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Combined Key' datatype='string' name='[Combined_Key]' role='dimension' type='nominal' />
      <column caption='Confirmed Diff' datatype='integer' name='[ConfirmedDiff]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Deaths Diff' datatype='integer' name='[DeathsDiff]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='Last Update' datatype='datetime' name='[Last_Update]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Recovered Diff' datatype='integer' name='[RecoveredDiff]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
      <column caption='State Equivalent' datatype='string' name='[StateEquivalent]' role='dimension' type='nominal' />
      <column caption='Value Diff' datatype='real' name='[ValueDiff]' role='measure' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Max' name='[max:Recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country Region)' hidden='true' name='[Action (Country Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Lat,Long)' hidden='true' name='[Action (Lat,Long)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Lat:ok]' />
          <groupfilter function='level-members' level='[none:Long:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.485868' measure-ordering='alphabetic' measure-percentage='0.514132' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14d300n1jhhc8a17mckyb0krrjw0].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.14d300n1jhhc8a17mckyb0krrjw0].[max:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.14d300n1jhhc8a17mckyb0krrjw0].[sum:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.14d300n1jhhc8a17mckyb0krrjw0].[max:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.14d300n1jhhc8a17mckyb0krrjw0].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.14d300n1jhhc8a17mckyb0krrjw0].[avg:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.14d300n1jhhc8a17mckyb0krrjw0].[cnt:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.14d300n1jhhc8a17mckyb0krrjw0].[max:Confirmed:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cruise Ship&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macao SAR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taipei and environs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot; Azerbaijan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;occupied Palestinian territory&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;The Gambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='CovidTSGlobal (Covid)' inline='true' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='i8pkcpqmt1.database.windows.net' name='sqlserver.0wm87yj1m9hjs31fd5z2c0lc9has'>
            <connection authentication='sqlserver' class='sqlserver' dbname='Covid' minimum-driver-version='SQL Server Native Client 10.0' odbc-native-protocol='yes' one-time-sql='' server='i8pkcpqmt1.database.windows.net' username='bladmin' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.0wm87yj1m9hjs31fd5z2c0lc9has' name='CovidTSGlobal' table='[dbo].[CovidTSGlobal]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>StateEquivalent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[StateEquivalent]</local-name>
            <parent-name>[CovidTSGlobal]</parent-name>
            <remote-alias>StateEquivalent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[CovidTSGlobal]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[CovidTSGlobal]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>5</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[CovidTSGlobal]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>5</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[CovidTSGlobal]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Combined_KeyBL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Combined_KeyBL]</local-name>
            <parent-name>[CovidTSGlobal]</parent-name>
            <remote-alias>Combined_KeyBL</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[CovidTSGlobal]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedDiff1</remote-name>
            <remote-type>3</remote-type>
            <local-name>[ConfirmedDiff1]</local-name>
            <parent-name>[CovidTSGlobal]</parent-name>
            <remote-alias>ConfirmedDiff1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedDiff7</remote-name>
            <remote-type>3</remote-type>
            <local-name>[ConfirmedDiff7]</local-name>
            <parent-name>[CovidTSGlobal]</parent-name>
            <remote-alias>ConfirmedDiff7</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[CovidTSGlobal]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathsDiff1</remote-name>
            <remote-type>3</remote-type>
            <local-name>[DeathsDiff1]</local-name>
            <parent-name>[CovidTSGlobal]</parent-name>
            <remote-alias>DeathsDiff1</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathsDiff7</remote-name>
            <remote-type>3</remote-type>
            <local-name>[DeathsDiff7]</local-name>
            <parent-name>[CovidTSGlobal]</parent-name>
            <remote-alias>DeathsDiff7</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[CovidTSGlobal]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RecoveredDiff1</remote-name>
            <remote-type>3</remote-type>
            <local-name>[RecoveredDiff1]</local-name>
            <parent-name>[CovidTSGlobal]</parent-name>
            <remote-alias>RecoveredDiff1</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RecoveredDiff7</remote-name>
            <remote-type>3</remote-type>
            <local-name>[RecoveredDiff7]</local-name>
            <parent-name>[CovidTSGlobal]</parent-name>
            <remote-alias>RecoveredDiff7</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Combined KeyBL' datatype='string' name='[Combined_KeyBL]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='Last Update' datatype='datetime' name='[Last_Update]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
      <column caption='State Equivalent' datatype='string' name='[StateEquivalent]' role='dimension' type='nominal' />
      <column caption='Value Diff' datatype='real' name='[ValueDiff]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Avg' name='[avg:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Count' name='[cnt:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Max' name='[max:Recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Value]' derivation='Max' name='[max:Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Combined_KeyBL]' derivation='None' name='[none:Combined_KeyBL:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Lat]' derivation='None' name='[none:Lat:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Long]' derivation='None' name='[none:Long:ok]' pivot='key' type='ordinal' />
      <column-instance column='[StateEquivalent]' derivation='None' name='[none:StateEquivalent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country Region)' hidden='true' name='[Action (Country Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Lat,Long)' hidden='true' name='[Action (Lat,Long)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Lat:ok]' />
          <groupfilter function='level-members' level='[none:Long:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Combined KeyBL,Country)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Combined_KeyBL:nk]' />
          <groupfilter function='level-members' level='[none:Country:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Country,State Equivalent)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:StateEquivalent:nk]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='//mac/Home/Documents/My Tableau Repository/Datasources/CovidTSGlobal (Covid).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/28/2020 08:36:51 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='CovidTSGlobal (Covid)' increment-value='%null%' refresh-type='create' rows-inserted='25824' timestamp-start='2020-04-28 20:36:51.705' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>StateEquivalent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[StateEquivalent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>StateEquivalent</remote-alias>
              <ordinal>0</ordinal>
              <family>CovidTSGlobal</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>121</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>1</ordinal>
              <family>CovidTSGlobal</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>238</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Long</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Long</remote-alias>
              <ordinal>2</ordinal>
              <family>CovidTSGlobal</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>353</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lat</remote-alias>
              <ordinal>3</ordinal>
              <family>CovidTSGlobal</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>333</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>4</ordinal>
              <family>CovidTSGlobal</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>96</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Combined_KeyBL</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Combined_KeyBL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Combined_KeyBL</remote-alias>
              <ordinal>5</ordinal>
              <family>CovidTSGlobal</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>358</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Confirmed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Confirmed</remote-alias>
              <ordinal>6</ordinal>
              <family>CovidTSGlobal</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1716</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ConfirmedDiff1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ConfirmedDiff1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ConfirmedDiff1</remote-alias>
              <ordinal>7</ordinal>
              <family>CovidTSGlobal</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>724</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ConfirmedDiff7</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ConfirmedDiff7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ConfirmedDiff7</remote-alias>
              <ordinal>8</ordinal>
              <family>CovidTSGlobal</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1165</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>9</ordinal>
              <family>CovidTSGlobal</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>501</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathsDiff1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DeathsDiff1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathsDiff1</remote-alias>
              <ordinal>10</ordinal>
              <family>CovidTSGlobal</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>251</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathsDiff7</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DeathsDiff7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathsDiff7</remote-alias>
              <ordinal>11</ordinal>
              <family>CovidTSGlobal</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>404</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Recovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Recovered</remote-alias>
              <ordinal>12</ordinal>
              <family>CovidTSGlobal</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RecoveredDiff1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[RecoveredDiff1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RecoveredDiff1</remote-alias>
              <ordinal>13</ordinal>
              <family>CovidTSGlobal</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>316</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RecoveredDiff7</remote-name>
              <remote-type>20</remote-type>
              <local-name>[RecoveredDiff7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RecoveredDiff7</remote-alias>
              <ordinal>14</ordinal>
              <family>CovidTSGlobal</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>584</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.325485' measure-ordering='alphabetic' measure-percentage='0.674515' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Value:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:StateEquivalent:nk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[avg:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[cnt:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Confirmed:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cruise Ship&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macao SAR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taipei and environs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot; Azerbaijan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;occupied Palestinian territory&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;The Gambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='BasicBL' source-platform='win' version='18.1'>
      <connection api-key='pk.eyJ1IjoiYWRhcnVzIiwiYSI6ImNrOGhiejZqMzAwOW4zZW43cHFscTF3ZXkifQ.hznMsfVxZWRYpSURLET2LQ' class='CustomMapbox' description='' full-url='' inline='true' offline='' port='443' server='https://api.mapbox.com' url='styles/v1' url-format='/styles/v1/adarus/{L}/tiles/{Z}/{X}/{Y}{D}?access_token=pk.eyJ1IjoiYWRhcnVzIiwiYSI6ImNrOGhiejZqMzAwOW4zZW43cHFscTF3ZXkifQ.hznMsfVxZWRYpSURLET2LQ' username='adarus' wait-tile-color='#dddddd' />
      <languages />
      <layers>
        <layer display-name='Basic' name='ck90qbkrr0gxq1iqp7k50far3' show-ui='true' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='BasicBL' name='mapbox://styles/adarus/ck90qbkrr0gxq1iqp7k50far3' wait-tile-color='#dddddd'>
          <map-layer-style name='Basic' request-string='ck90qbkrr0gxq1iqp7k50far3' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map'>
            <format attr='map-style' value='mapbox://styles/adarus/ck90qbkrr0gxq1iqp7k50far3' />
            <format attr='washout' value='0' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='© %1 Mapbox' copyright-url='https://mapbox.com/about/maps' short-copyright-string='© Mapbox' />
      <map-attribution2 copyright-string='© OpenStreetMap' copyright-url='https://mapbox.com/about/maps' short-copyright-string='© OSM' />
    </mapsource>
    <mapsource inline='true' name='MonochromeBL' source-platform='win' version='18.1'>
      <connection api-key='pk.eyJ1IjoiYWRhcnVzIiwiYSI6ImNrOGhiejZqMzAwOW4zZW43cHFscTF3ZXkifQ.hznMsfVxZWRYpSURLET2LQ' class='CustomMapbox' description='' full-url='' inline='true' offline='' port='443' server='https://api.mapbox.com' url='styles/v1' url-format='/styles/v1/adarus/{L}/tiles/{Z}/{X}/{Y}{D}?access_token=pk.eyJ1IjoiYWRhcnVzIiwiYSI6ImNrOGhiejZqMzAwOW4zZW43cHFscTF3ZXkifQ.hznMsfVxZWRYpSURLET2LQ' username='adarus' wait-tile-color='#dddddd' />
      <languages />
      <layers>
        <layer display-name='Monochrome' name='ck90qm98i0h201iq5ua2l1wsi' show-ui='true' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='MonochromeBL' name='mapbox://styles/adarus/ck90qm98i0h201iq5ua2l1wsi' wait-tile-color='#dddddd'>
          <map-layer-style name='Monochrome' request-string='ck90qm98i0h201iq5ua2l1wsi' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map'>
            <format attr='map-style' value='mapbox://styles/adarus/ck90qm98i0h201iq5ua2l1wsi' />
            <format attr='washout' value='0' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='© %1 Mapbox' copyright-url='https://mapbox.com/about/maps' short-copyright-string='© Mapbox' />
      <map-attribution2 copyright-string='© OpenStreetMap' copyright-url='https://mapbox.com/about/maps' short-copyright-string='© OSM' />
    </mapsource>
    <mapsource inline='true' name='FrankCopied' source-platform='win' version='18.1'>
      <connection api-key='pk.eyJ1IjoiYWRhcnVzIiwiYSI6ImNrOGhiejZqMzAwOW4zZW43cHFscTF3ZXkifQ.hznMsfVxZWRYpSURLET2LQ' class='CustomMapbox' description='' full-url='' inline='true' offline='' port='443' server='https://api.mapbox.com' url='styles/v1' url-format='/styles/v1/adarus/{L}/tiles/{Z}/{X}/{Y}{D}?access_token=pk.eyJ1IjoiYWRhcnVzIiwiYSI6ImNrOGhiejZqMzAwOW4zZW43cHFscTF3ZXkifQ.hznMsfVxZWRYpSURLET2LQ' username='adarus' wait-tile-color='#dddddd' />
      <languages />
      <layers>
        <layer display-name='Frank' name='ck90qoeb500rg1iqi30sabj1t' show-ui='true' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='FrankCopied' name='mapbox://styles/adarus/ck90qoeb500rg1iqi30sabj1t' wait-tile-color='#dddddd'>
          <map-layer-style name='Frank' request-string='ck90qoeb500rg1iqi30sabj1t' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map'>
            <format attr='map-style' value='mapbox://styles/adarus/ck90qoeb500rg1iqi30sabj1t' />
            <format attr='washout' value='0' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='© %1 Mapbox' copyright-url='https://mapbox.com/about/maps' short-copyright-string='© Mapbox' />
      <map-attribution2 copyright-string='© OpenStreetMap' copyright-url='https://mapbox.com/about/maps' short-copyright-string='© OSM' />
    </mapsource>
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='GlobalDashboard' type='sheet' worksheet='Nav' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='KPI,TreeConfirmed,TreeDeaths,DetailTableGlobal' />
        <param name='special-fields' value='all' />
        <param name='target' value='GlobalDashboard' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='KPI' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='KPI' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='KPI (2)' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='KPI (2)' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='ConfirmedGlobal'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Confirmed:qk]</rows>
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{6F9FA1EB-3390-48F4-B666-FFAD7A08AD7A}' />
    </worksheet>
    <worksheet name='DailyConfirmedGlobal'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='integer' name='[ConfirmedDiff1]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[ConfirmedDiff1]' derivation='Max' name='[max:ConfirmedDiff1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:ConfirmedDiff1:qk]</rows>
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{875500B2-6E9A-40E9-BCE5-0B92AAD58CC4}' />
    </worksheet>
    <worksheet name='DailyDeathsGlobal'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[DeathsDiff1]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DeathsDiff1]' derivation='Sum' name='[sum:DeathsDiff1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#999999' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:DeathsDiff1:qk]</rows>
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{C889063B-8DCA-4F8D-9ED1-5892A0A410AF}' />
    </worksheet>
    <worksheet name='DailyRecoveredGlobal'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[RecoveredDiff1]' role='measure' type='quantitative' />
            <column-instance column='[RecoveredDiff1]' derivation='Max' name='[max:RecoveredDiff1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#108040' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:RecoveredDiff1:qk]</rows>
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{A22B3428-92F5-4AF0-9C83-3D83514BF7AB}' />
    </worksheet>
    <worksheet name='DeathsGlobal'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#999999' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Deaths:qk]</rows>
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{4AEA24C7-9C44-4371-A241-1EFBB134C3EB}' />
    </worksheet>
    <worksheet name='DetailTableGlobal'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='integer' name='[ConfirmedDiff1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[ConfirmedDiff7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[DeathsDiff1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[DeathsDiff7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RecoveredDiff1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RecoveredDiff7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ConfirmedDiff1]' derivation='Max' name='[max:ConfirmedDiff1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ConfirmedDiff7]' derivation='Max' name='[max:ConfirmedDiff7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DeathsDiff1]' derivation='Max' name='[max:DeathsDiff1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DeathsDiff7]' derivation='Max' name='[max:DeathsDiff7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Max' name='[max:Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RecoveredDiff1]' derivation='Max' name='[max:RecoveredDiff1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RecoveredDiff7]' derivation='Max' name='[max:RecoveredDiff7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:ConfirmedDiff1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:ConfirmedDiff7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:DeathsDiff1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:DeathsDiff7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Recovered:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:RecoveredDiff1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:RecoveredDiff7:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Confirmed:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:ConfirmedDiff1:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:ConfirmedDiff7:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:DeathsDiff1:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:DeathsDiff7:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Recovered:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:RecoveredDiff1:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:RecoveredDiff7:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]' direction='DESC' using='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Confirmed:qk]' />
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='92' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</rows>
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{3854265B-B737-4852-A081-BF74D4F7FE2C}' />
    </worksheet>
    <worksheet lock-quick-filters='true' name='KPI'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='Last Update' datatype='datetime' name='[Last_Update]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Last_Update]' derivation='MDY' name='[md:Last_Update:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Recovered:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Recovered:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[md:Last_Update:ok]'>
            <groupfilter function='member' level='[md:Last_Update:ok]' member='20200409' />
            <preset type='last-values' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[md:Last_Update:ok]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='415' />
            <format attr='height' value='42' />
            <format attr='text-align' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Multiple Values]' value='center' />
            <format attr='font-weight' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Multiple Values]' value='bold' />
            <format attr='font-size' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Multiple Values]' value='24' />
            <format attr='text-format' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]' value='' />
            <format attr='text-format' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Deaths:qk]' value='' />
            <format attr='color' data-class='total' scope='cols' value='#edc948' />
            <format attr='color' data-class='subtotal' scope='rows' value='#f1ce63' />
            <format attr='color' data-class='total' scope='rows' value='#b6992d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='38' />
            <format attr='font-weight' data-class='subtotal' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='bold' />
            <format attr='background-color' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='#ffffff' />
            <format attr='background-color' scope='rows' value='#e9edf5' />
            <format attr='background-color' scope='cols' value='#f5eddc' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#ebebeb' />
            <format attr='background-color' data-class='total' scope='cols' value='#e8edda' />
            <format attr='color' data-class='total' scope='cols' value='#76b7b2' />
            <format attr='color' data-class='subtotal' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='#75a1c7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='Tableau Light' />
            <format attr='font-size' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='12' />
            <format attr='color' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]' value='#ff9d9a' />
            <format attr='color' scope='cols' value='#59a14f' />
            <format attr='color' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='#898989' />
            <format attr='color' scope='rows' value='#e799b3' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#898989' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#e9f3f2' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='color' value='#72b966' />
          </style-rule>
          <_.fcp.MarkAnimation.true...style-rule element='animation'>
            <format attr='animation-on' value='ao-on' />
            <format attr='animation-duration' value='0.5' />
          </_.fcp.MarkAnimation.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' />
              <text column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{F80624B3-4D6B-4D1E-836D-C8649DC6C498}' />
    </worksheet>
    <worksheet name='KPI (2)'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='Last Update' datatype='datetime' name='[Last_Update]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Last_Update]' derivation='MDY' name='[md:Last_Update:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Recovered:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Recovered:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[md:Last_Update:ok]'>
            <groupfilter function='member' level='[md:Last_Update:ok]' member='20200409' />
            <preset type='last-values' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[md:Last_Update:ok]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='415' />
            <format attr='height' value='42' />
            <format attr='text-align' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Multiple Values]' value='center' />
            <format attr='font-weight' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Multiple Values]' value='bold' />
            <format attr='font-size' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Multiple Values]' value='24' />
            <format attr='text-format' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]' value='' />
            <format attr='text-format' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Deaths:qk]' value='' />
            <format attr='color' data-class='total' scope='cols' value='#edc948' />
            <format attr='color' data-class='subtotal' scope='rows' value='#f1ce63' />
            <format attr='color' data-class='total' scope='rows' value='#b6992d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='38' />
            <format attr='font-weight' data-class='subtotal' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='bold' />
            <format attr='background-color' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='#ffffff' />
            <format attr='background-color' scope='rows' value='#e9edf5' />
            <format attr='background-color' scope='cols' value='#f5eddc' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#ebebeb' />
            <format attr='background-color' data-class='total' scope='cols' value='#e8edda' />
            <format attr='color' data-class='total' scope='cols' value='#76b7b2' />
            <format attr='color' data-class='subtotal' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='#75a1c7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='Tableau Light' />
            <format attr='font-size' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='12' />
            <format attr='color' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]' value='#ff9d9a' />
            <format attr='color' scope='cols' value='#59a14f' />
            <format attr='color' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='#898989' />
            <format attr='color' scope='rows' value='#e799b3' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#898989' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#e9f3f2' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='color' value='#72b966' />
          </style-rule>
          <_.fcp.MarkAnimation.true...style-rule element='animation'>
            <format attr='animation-on' value='ao-on' />
            <format attr='animation-duration' value='0.5' />
          </_.fcp.MarkAnimation.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' />
              <text column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C4752800-CE36-4C83-AF5A-25729D3F3B13}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lat]' derivation='None' name='[none:Lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Long]' derivation='None' name='[none:Long:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Long:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Long:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Long:qk]' field-type='quantitative' max='48113187215.250999' min='-24069269593.842701' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Lat:qk]' field-type='quantitative' max='40781779957.660797' min='-13502575067.9986' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#1b1b1b' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='1' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='parks' value='false' />
            <format attr='enabled' id='landcover_wood' value='false' />
            <format attr='enabled' id='landcover_scrub' value='false' />
            <format attr='enabled' id='landcover_grass' value='false' />
            <format attr='enabled' id='landcover_crop' value='false' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-bg' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-dispute' value='true' />
            <format attr='enabled' id='admin-0-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute' value='false' />
            <format attr='enabled' id='light-admin-0-boundaries-bg-sub' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-supress-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-sm-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-md-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-lg-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-dispute-sub' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-sub' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-supress' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-sm-parents' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-md-parents' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-lg-parents' value='true' />
            <format attr='enabled' id='light-admin1-water-lines-usa-tableau' value='true' />
            <format attr='enabled' id='light-9-dash-line-casing' value='true' />
            <format attr='enabled' id='light-9-dash-line' value='true' />
            <format attr='enabled' id='light-admin-1-label-9th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-8th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-7th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-6th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-5th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-4th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-3rd-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-2nd-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-1st-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-3rd-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-2nd-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-1st-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-5th-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-4th-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-3rd-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-2nd-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-1st-tier' value='true' />
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Confirmed:qk]' />
              <tooltip column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[attr:Country:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Location:&#9;</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'>Confirmed Cases:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Recovered:&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='5.0694117546081543' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Lat:qk]</rows>
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Long:qk]</cols>
      </table>
      <simple-id uuid='{95E48436-767C-4F38-9E62-4438A0D03951}' />
    </worksheet>
    <worksheet name='Map (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province_State]' derivation='Attribute' name='[attr:Province_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Max' name='[max:Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lat]' derivation='None' name='[none:Lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Long]' derivation='None' name='[none:Long:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Long:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Long:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Long:qk]' field-type='quantitative' max='1134.2162699999999' min='-12676553.32525' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Lat:qk]' field-type='quantitative' max='10115018.25055' min='580844.41066000005' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <format attr='tick-color' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Confirmed:qk]' value='#75a1c7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#1b1b1b' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='1' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='parks' value='false' />
            <format attr='enabled' id='landcover_wood' value='false' />
            <format attr='enabled' id='landcover_scrub' value='false' />
            <format attr='enabled' id='landcover_grass' value='false' />
            <format attr='enabled' id='landcover_crop' value='false' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-bg' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-dispute' value='true' />
            <format attr='enabled' id='admin-0-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute' value='false' />
            <format attr='enabled' id='light-admin-0-boundaries-bg-sub' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-supress-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-sm-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-md-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-lg-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-dispute-sub' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-sub' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-supress' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-sm-parents' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-md-parents' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-lg-parents' value='true' />
            <format attr='enabled' id='light-admin1-water-lines-usa-tableau' value='true' />
            <format attr='enabled' id='light-9-dash-line-casing' value='true' />
            <format attr='enabled' id='light-9-dash-line' value='true' />
            <format attr='enabled' id='light-admin-1-label-9th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-8th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-7th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-6th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-5th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-4th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-3rd-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-2nd-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-1st-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-3rd-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-2nd-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-1st-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-5th-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-4th-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-3rd-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-2nd-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-1st-tier' value='true' />
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Confirmed:qk]' />
              <tooltip column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[attr:Country:nk]' />
              <tooltip column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[attr:Province_State:nk]' />
              <tooltip column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Deaths:qk]' />
              <tooltip column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Recovered:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Location:&#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[attr:Combined_Key:nk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'>Confirmed Cases:&#9;</run>
                <run bold='true'>&lt;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Confirmed:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Deaths:&#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Deaths:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Recovered:&#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Recovered:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='5.0694117546081543' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Lat:qk]</rows>
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Long:qk]</cols>
      </table>
      <simple-id uuid='{576471E5-344C-4A72-BB8F-0ACD33EDE76F}' />
    </worksheet>
    <worksheet lock-quick-filters='true' name='Nav'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Togo&quot;' />
              <groupfilter from='&quot;Trinidad and Tobago&quot;' function='range' level='[none:Country:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]' direction='DESC' using='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]' />
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-26#' />
            <preset type='last-values' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:ok]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{CD89AC7B-C302-4F12-87CB-EAB22DFB2035}' />
    </worksheet>
    <worksheet name='RecoveredGlobal'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Max' name='[max:Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#108040' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Recovered:qk]</rows>
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{5E14C204-987F-46BC-B7F3-007A2540F6A7}' />
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Value]' derivation='Max' name='[max:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Value:qk]</rows>
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:qk]</cols>
      </table>
      <simple-id uuid='{E4F19610-6CFB-4D02-B1E5-F66F9CD531DD}' />
    </worksheet>
    <worksheet name='Sheet 29'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column caption='Combined KeyBL' datatype='string' name='[Combined_KeyBL]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='State Equivalent' datatype='string' name='[StateEquivalent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Value]' derivation='Max' name='[max:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Combined_KeyBL]' derivation='None' name='[none:Combined_KeyBL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[StateEquivalent]' derivation='None' name='[none:StateEquivalent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-26#' />
            <preset type='last-values' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]'>
            <groupfilter function='member' level='[none:Type:nk]' member='&quot;Confirmed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Value:qk]' />
              <color column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Value:qk]' />
              <text column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:StateEquivalent:nk]' />
              <text column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_KeyBL:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{14A105F5-EC1D-4661-A0DB-D6A38EF3596C}' />
    </worksheet>
    <worksheet name='Sheet 30'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Value]' derivation='Max' name='[max:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]' direction='DESC' using='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Value:qk]' />
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]'>
            <groupfilter from='&quot;Confirmed&quot;' function='range' level='[none:Type:nk]' to='&quot;Recovered&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='vertical-align' value='auto' />
            <format attr='text-align' value='auto' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='right' />
            <format attr='text-align' data-class='subtotal' scope='rows' value='right' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' value='right' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]' value='right' />
            <format attr='text-format' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Value:qk]' value='' />
            <format attr='text-align' value='left' />
            <format attr='wrap' value='on' />
            <format attr='text-align' scope='cols' value='right' />
            <format attr='vertical-align' scope='cols' value='top' />
            <format attr='text-align' scope='rows' value='left' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</rows>
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]</cols>
      </table>
      <simple-id uuid='{5E1DECED-BCEE-4004-AFF0-37F0F1975EC6}' />
    </worksheet>
    <worksheet name='Sheet 30 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[ValueDiff7]' role='measure' type='quantitative' />
            <column caption='Value Diff' datatype='real' name='[ValueDiff]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Value]' derivation='Max' name='[max:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ValueDiff7]' derivation='Max' name='[max:ValueDiff7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ValueDiff]' derivation='Max' name='[max:ValueDiff:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:ValueDiff:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:ValueDiff7:qk]&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]' direction='DESC' using='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Value:qk]' />
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]'>
            <groupfilter from='&quot;Confirmed&quot;' function='range' level='[none:Type:nk]' to='&quot;Recovered&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='vertical-align' value='auto' />
            <format attr='text-align' value='auto' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='right' />
            <format attr='text-align' data-class='subtotal' scope='rows' value='right' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' value='right' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]' value='right' />
            <format attr='text-format' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Value:qk]' value='' />
            <format attr='text-align' value='left' />
            <format attr='wrap' value='on' />
            <format attr='text-align' scope='cols' value='right' />
            <format attr='vertical-align' scope='cols' value='top' />
            <format attr='text-align' scope='rows' value='left' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</rows>
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{88048134-6245-47FC-895E-9C8DECF2FA7E}' />
    </worksheet>
    <worksheet name='Sheet 31'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='State Equivalent' datatype='string' name='[StateEquivalent]' role='dimension' type='nominal' />
            <column-instance column='[Lat]' derivation='Avg' name='[avg:Lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Long]' derivation='Avg' name='[avg:Long:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[StateEquivalent]' derivation='None' name='[none:StateEquivalent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Exclusions (Country,State Equivalent)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='level-members' level='[none:StateEquivalent:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:StateEquivalent:nk]' member='&quot;&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:StateEquivalent:nk]'>
            <groupfilter from='&quot;&quot;' function='range' level='[none:StateEquivalent:nk]' to='&quot;Zhejiang&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:StateEquivalent:nk]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Exclusions (Country,State Equivalent)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[avg:Long:qk]' field-type='quantitative' max='11818473.233020168' min='-19190529.393935215' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[avg:Lat:qk]' field-type='quantitative' max='11790430.792052256' min='-3170734.2498567915' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]' />
              <lod column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]' />
              <lod column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:StateEquivalent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.0901985168457031' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[avg:Lat:qk]</rows>
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[avg:Long:qk]</cols>
      </table>
      <simple-id uuid='{363116FA-36B1-4FD5-9BA1-EE85A3493F2E}' />
    </worksheet>
    <worksheet name='SummaryTable'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column caption='Combined KeyBL' datatype='string' name='[Combined_KeyBL]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Combined_KeyBL]' derivation='None' name='[none:Combined_KeyBL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Recovered:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_KeyBL:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Combined_KeyBL:nk]' />
              <groupfilter function='member' level='[none:Combined_KeyBL:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-26#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <preset type='last-values' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_KeyBL:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:ok]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_KeyBL:nk]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]' value='88' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_KeyBL:nk]' value='192' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_KeyBL:nk]</rows>
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{15B51842-7B25-4D94-AF63-E5F0077C98B1}' />
    </worksheet>
    <worksheet name='TS'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Last Update' datatype='datetime' name='[Last_Update]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Last_Update]' derivation='None' name='[none:Last_Update:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]</rows>
        <cols>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Last_Update:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Last_Update:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
                  <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Last_Update:qk]</field>
                  <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;US&quot;</value>
                <value>#2020-03-26 00:00:00#</value>
                <value>83836</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{98EEEDCC-1E34-47EB-AA14-A63D684BC2C7}' />
    </worksheet>
    <worksheet name='TreeConfirmed'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Confirmed</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column caption='Combined KeyBL' datatype='string' name='[Combined_KeyBL]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Combined_KeyBL]' derivation='None' name='[none:Combined_KeyBL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Exclusions (Combined KeyBL,Country)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Combined_KeyBL:nk]' />
                <groupfilter function='level-members' level='[none:Country:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Combined_KeyBL:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Total&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Exclusions (Combined KeyBL,Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Confirmed:qk]' />
              <color column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Confirmed:qk]' />
              <text column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]' />
              <lod column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_KeyBL:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{13F66D12-F070-4557-8BA4-CDD123EC2649}' />
    </worksheet>
    <worksheet name='TreeConfirmed (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Confirmed</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column caption='Combined KeyBL' datatype='string' name='[Combined_KeyBL]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Last Update' datatype='datetime' name='[Last_Update]' role='dimension' type='ordinal' />
            <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Combined_KeyBL]' derivation='None' name='[none:Combined_KeyBL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Last_Update]' derivation='None' name='[none:Last_Update:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Province_State]' derivation='None' name='[none:Province_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]'>
            <groupfilter function='member' level='[Country]' member='&quot;US&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Last_Update:ok]'>
            <groupfilter function='member' level='[none:Last_Update:ok]' member='#2020-04-09 00:00:00#' />
            <preset type='last-values' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Province_State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Diamond Princess&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Grand Princess&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Guam&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Northern Mariana Islands&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Puerto Rico&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Recovered&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Virgin Islands&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:Province_State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Last_Update:ok]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Province_State:nk]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]' />
              <color column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]' />
              <text column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Province_State:nk]' />
              <lod column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_KeyBL:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{810DAD2D-62B4-4E2C-B138-6D0787B85FAB}' />
    </worksheet>
    <worksheet name='TreeDeaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column caption='Combined KeyBL' datatype='string' name='[Combined_KeyBL]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Combined_KeyBL]' derivation='None' name='[none:Combined_KeyBL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Exclusions (Combined KeyBL,Country)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Combined_KeyBL:nk]' />
                <groupfilter function='level-members' level='[none:Country:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Combined_KeyBL:nk]' member='&quot;Total&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Total&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-26#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <preset type='last-values' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:ok]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Exclusions (Combined KeyBL,Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Deaths:qk]' palette='red_black_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Deaths:qk]' />
              <color column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Deaths:qk]' />
              <text column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]' />
              <lod column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_KeyBL:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B909EA45-B88F-4373-BB9E-4CDA28ADFD0A}' />
    </worksheet>
    <worksheet name='TreeDeaths (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidTSGlobal (Covid)' name='federated.0zgnwri1v5fsay1avql9r1f54qtl' />
          </datasources>
          <datasource-dependencies datasource='federated.0zgnwri1v5fsay1avql9r1f54qtl'>
            <column caption='Combined KeyBL' datatype='string' name='[Combined_KeyBL]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='State Equivalent' datatype='string' name='[StateEquivalent]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Combined_KeyBL]' derivation='None' name='[none:Combined_KeyBL:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[StateEquivalent]' derivation='None' name='[none:StateEquivalent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]'>
            <groupfilter function='member' level='[Country]' member='&quot;US&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-26#' />
            <preset type='last-values' />
          </filter>
          <filter class='categorical' column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:StateEquivalent:nk]'>
            <groupfilter function='empty-level' member='[none:StateEquivalent:nk]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:ok]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:StateEquivalent:nk]</column>
            <column>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[Action (Country Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Value:qk]' />
              <color column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Value:qk]' />
              <text column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:StateEquivalent:nk]' />
              <lod column='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_KeyBL:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{52F677B8-09A2-4877-B779-FD2B94E79821}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='GlobalDashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='15'>Coronavirus COVID-19 Global Cases</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Data Provided By the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University (JHU) </run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='color' value='#72b966' />
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='6099' maxwidth='1820' minheight='6099' minwidth='1820' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='99738' id='105' param='horz' type='layout-flow' w='99120' x='440' y='131'>
            <zone h='99738' id='103' type='layout-basic' w='99120' x='440' y='131'>
              <zone friendly-name='Summary' h='16031' id='92' param='vert' type='layout-flow' w='99120' x='440' y='131'>
                <zone h='836' id='93' type='title' w='99120' x='440' y='131'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='15195' id='90' type='layout-basic' w='99120' x='440' y='967'>
                  <zone h='6858' id='32' param='horz' type='layout-flow' w='99120' x='440' y='9304'>
                    <zone h='6858' id='30' type='layout-basic' w='99120' x='440' y='9304'>
                      <zone h='6858' id='7' param='horz' type='layout-flow' w='99120' x='440' y='9304'>
                        <zone h='6858' id='5' type='layout-basic' w='99120' x='440' y='9304'>
                          <zone h='3429' id='140' name='Sheet 15' w='99120' x='440' y='12733'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='3429' id='154' param='vert' type='layout-flow' w='99120' x='440' y='9304' />
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='1478' id='73' name='KPI' show-title='false' w='99120' x='440' y='967'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6859' id='41' name='Nav' show-title='false' w='99120' x='440' y='2445'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone friendly-name='Detail' h='82653' id='98' param='vert' type='layout-flow' w='99120' x='440' y='17216'>
                <zone fixed-size='563' friendly-name='TreeViews' h='9231' id='99' is-fixed='true' param='horz' type='layout-flow' w='99120' x='440' y='17216'>
                  <zone fixed-size='824' h='9231' id='102' is-fixed='true' name='TreeConfirmed' w='45715' x='440' y='17216'>
                    <layout-cache fixed-size-h='552' type-h='fixed' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='1138' h='9231' id='107' is-fixed='true' name='TreeDeaths' w='53405' x='46155' y='17216'>
                    <layout-cache fixed-size-h='554' type-h='fixed' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='405' friendly-name='Cummulative' h='6640' id='116' is-fixed='true' param='horz' type='layout-flow' w='99120' x='440' y='26447'>
                  <zone h='6640' id='114' name='ConfirmedGlobal' w='33186' x='440' y='26447'>
                    <layout-cache minheight='198' minwidth='174' type-h='scalable' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6640' id='115' name='DeathsGlobal' w='32747' x='33626' y='26447'>
                    <layout-cache minheight='198' minwidth='166' type-h='scalable' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6640' id='117' name='RecoveredGlobal' w='33186' x='66373' y='26447'>
                    <layout-cache minheight='198' minwidth='174' type-h='scalable' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='407' friendly-name='DailyChange' h='6673' id='118' is-fixed='true' param='horz' type='layout-flow' w='99120' x='440' y='33087'>
                  <zone h='6673' id='119' name='DailyConfirmedGlobal' w='33296' x='440' y='33087'>
                    <layout-cache minheight='198' minwidth='166' type-h='scalable' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6673' id='120' name='DailyDeathsGlobal' w='32911' x='33736' y='33087'>
                    <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6673' id='121' name='DailyRecoveredGlobal' w='32911' x='66647' y='33087'>
                    <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='59995' id='151' name='DetailTableGlobal' w='99120' x='440' y='39760'>
                  <layout-cache cell-count-h='186' non-cell-size-h='63' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='527' id='132' param='horz' type='layout-flow' w='99120' x='440' y='16689' />
              <zone forceUpdate='true' h='527' id='133' type='text' w='99120' x='440' y='16162'>
                <formatted-text>
                  <run fontalignment='1' fontsize='14'>Treemap showing the scope of Confirmed Cases and Deaths in the United States.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='15'>Coronavirus COVID-19 Global Cases</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Data Provided By the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University (JHU) </run>
                <run fontalignment='1'>Æ&#10;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='3350' minheight='3350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='164' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='99738' id='163' param='vert' type='layout-flow' w='99120' x='440' y='131'>
                <zone h='836' id='93' type='title' w='99120' x='440' y='131'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='82' h='1478' id='73' is-fixed='true' name='KPI' show-title='false' w='99120' x='440' y='967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='6859' id='41' is-fixed='true' name='Nav' show-title='false' w='99120' x='440' y='2445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='201' h='3429' id='140' is-fixed='true' name='Sheet 15' w='99120' x='440' y='12733'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='527' id='133' type='text' w='99120' x='440' y='16162'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='14'>Treemap showing the scope of Confirmed Cases and Deaths in the United States.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='9231' id='102' is-fixed='true' name='TreeConfirmed' w='45715' x='440' y='17216'>
                  <layout-cache fixed-size-h='552' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='9231' id='107' is-fixed='true' name='TreeDeaths' w='53405' x='46155' y='17216'>
                  <layout-cache fixed-size-h='554' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='6640' id='114' is-fixed='true' name='ConfirmedGlobal' w='33186' x='440' y='26447'>
                  <layout-cache minheight='198' minwidth='174' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='6640' id='115' is-fixed='true' name='DeathsGlobal' w='32747' x='33626' y='26447'>
                  <layout-cache minheight='198' minwidth='166' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='6640' id='117' is-fixed='true' name='RecoveredGlobal' w='33186' x='66373' y='26447'>
                  <layout-cache minheight='198' minwidth='174' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='6673' id='119' is-fixed='true' name='DailyConfirmedGlobal' w='33296' x='440' y='33087'>
                  <layout-cache minheight='198' minwidth='166' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='6673' id='120' is-fixed='true' name='DailyDeathsGlobal' w='32911' x='33736' y='33087'>
                  <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='6673' id='121' is-fixed='true' name='DailyRecoveredGlobal' w='32911' x='66647' y='33087'>
                  <layout-cache minheight='198' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59995' id='151' is-fixed='true' name='DetailTableGlobal' w='99120' x='440' y='39760'>
                  <layout-cache cell-count-h='186' non-cell-size-h='63' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{873C9818-590A-44B0-98B1-2EF9D3B8FDA9}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Nav'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;US&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93E28680-59A3-475B-A1BC-B41D9D515E8E}' />
    </window>
    <window class='worksheet' name='KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{33C8FE66-9D44-4591-B3E8-93357BC20069}' />
    </window>
    <window class='worksheet' name='KPI (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2D1FAF6-F97E-4B2E-ABB9-E581308066B2}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_Key:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <geo-search-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1C18C934-A3AE-41A9-BF2A-EB946AA1E98E}' />
    </window>
    <window class='worksheet' name='Map (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_Key:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <geo-search-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9723FB26-707C-4AA3-AD55-F59D876EB887}' />
    </window>
    <window class='dashboard' maximized='true' name='GlobalDashboard'>
      <viewpoints>
        <viewpoint name='ConfirmedGlobal'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='DailyConfirmedGlobal'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='DailyDeathsGlobal'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='DailyRecoveredGlobal'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='DeathsGlobal'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='DetailTableGlobal'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Nav' />
        <viewpoint name='RecoveredGlobal'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 15'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TreeConfirmed'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='TreeDeaths'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='73' />
      <device-preview selected='Desktop'>
        <device name='Generic Desktop Monitor' type='Desktop' />
      </device-preview>
      <simple-id uuid='{C98DF780-04C6-46C4-9DA5-3840ABF90CE4}' />
    </window>
    <window class='worksheet' name='TS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Last_Update:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
                  <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Last_Update:qk]</field>
                  <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;US&quot;</value>
                <value>#2020-03-30 00:00:00#</value>
                <value>161831</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[yr:Last_Update:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{183447E2-51D0-4B16-B0A4-7E91DCFD0615}' />
    </window>
    <window class='worksheet' name='ConfirmedGlobal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Last_Update:qk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78E7477E-3A3F-4E23-A152-77FFF91A1BD2}' />
    </window>
    <window class='worksheet' name='DailyConfirmedGlobal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Last_Update:qk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{117AA820-B145-44BA-B42C-1A02742E65C9}' />
    </window>
    <window class='worksheet' name='DeathsGlobal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Last_Update:qk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5571A4A-DFD0-416C-9365-6FC8C73CAB68}' />
    </window>
    <window class='worksheet' name='DailyDeathsGlobal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Last_Update:qk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7292D468-B6F0-4185-8807-C3AB8F1E3764}' />
    </window>
    <window class='worksheet' name='RecoveredGlobal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[yr:Date:ok]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[yr:Last_Update:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20741B35-ED15-40D9-8B90-EC46EBC2196E}' />
    </window>
    <window class='worksheet' name='DailyRecoveredGlobal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[yr:Date:ok]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[yr:Last_Update:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C131BB0-345F-4796-BF48-7899CFB651F4}' />
    </window>
    <window class='worksheet' name='SummaryTable'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_KeyBL:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9ABA594E-2235-4509-83AA-9552CE263DD5}' />
    </window>
    <window class='worksheet' name='TreeConfirmed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Confirmed:qk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_KeyBL:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:ok]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Last_Update:ok]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Province_State:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:StateEquivalent:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[yr:Last_Update:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{667F14C6-DCE1-4B21-AD74-21F944F30155}' />
    </window>
    <window class='worksheet' name='TreeConfirmed (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_KeyBL:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Last_Update:ok]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Province_State:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[yr:Last_Update:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C24D2184-8170-4F5E-B1CA-10A67CD56EC1}' />
    </window>
    <window class='worksheet' name='TreeDeaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Deaths:qk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_KeyBL:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:ok]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Last_Update:ok]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Province_State:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[yr:Last_Update:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0EFF28EF-36CE-4367-B04B-2103E88E46C9}' />
    </window>
    <window class='worksheet' name='TreeDeaths (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19syv8g066c4kq1420nj41gqp6o2].[sum:Value:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.19syv8g066c4kq1420nj41gqp6o2].[sum:Value:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_KeyBL:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:ok]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Last_Update:ok]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Province_State:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:StateEquivalent:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Deaths:qk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[yr:Last_Update:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F8557D6E-41AF-4C18-86AD-7CF3AEDA9864}' />
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E20EF1FD-12A3-4F35-9651-81AE5069394A}' />
    </window>
    <window class='worksheet' name='Sheet 29'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19syv8g066c4kq1420nj41gqp6o2].[max:Value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[max:Value:qk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Combined_KeyBL:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Date:ok]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:StateEquivalent:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A3B7B5D-CC1D-4063-AA16-BB886F482254}' />
    </window>
    <window class='worksheet' name='Sheet 30'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{33F21EAD-7C66-407F-B7E7-D424C0DD477D}' />
    </window>
    <window class='worksheet' name='Sheet 30 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E81E44D-8EA4-4EFA-BAE7-3DC7ABB6E2C1}' />
    </window>
    <window class='worksheet' name='DetailTableGlobal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[:Measure Names]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D260DC58-87C6-4157-AAFA-3D47932AB009}' />
    </window>
    <window class='worksheet' name='Sheet 31'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zgnwri1v5fsay1avql9r1f54qtl].[sum:Confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:Country:nk]</field>
            <field>[federated.0zgnwri1v5fsay1avql9r1f54qtl].[none:StateEquivalent:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{1B800C03-D2AD-477B-B70A-FFA935E0583D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ConfirmedGlobal' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='DailyConfirmedGlobal' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DailyDeathsGlobal' width='192'>
      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
      mPYPEKVvdEeA6esAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='DailyRecoveredGlobal' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='DeathsGlobal' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='DetailTableGlobal' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GlobalDashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWp0lEQVR4nO3dW3MbZ37n8W8D6Mb5fCABnkCKFCXqYNmK7ZrUZLM7uzXJZlM1F/uG5sXs
      7V5tVZLZVKWSyozlsTQ6jURKpCQSIM4g0Dif0b0XsifWgPSMvZYAqf+fG9tFWf5bhR/ZT//6
      6UcxTdNECIuyzXsAIebJ8c3fyA8CYUWOb/9DqVSa1xxCzIXjT/8SId5/rw4e8vRlHtUd4Oc/
      +yk2RQEkAMISDB4fZvjFL35B6TRDo1rgy/tPUF1+WQQLKzAxef0d3x8M8fDB7/jLv/6vuKcN
      lG9ug5qmKWsA8cH68l9/RbU7odMd8ZOPd3j0/JTx2JAACGuTNYD4UXz7Nrry9QLz/K8r/PGX
      TdNEUZQ//PWPf7/z/r1v/9o/579/3iyKokgAxI/j4Ne/oeF1EfSEcJhDVGVMV42jjRpsbF/l
      q3/7v9g1jcjKJSI+N41Gg+VUEk0Bvddn3GlxWi6wEl9meXWNZw++wr28S+noPobdQfrKJ6TC
      TrA5+PLOXQyzx87V29hGLfzxNVrFY/L1Jonldab9FvF4jFKlxrBdJbK2S6/dJBbxMzbsvLz/
      74S2b6NiYP/lL3/5y2/+Jzqdzhz/CMX7rJavsvPpx+SeP2IyNml3mwSiSVrVMl0DenqFYCzF
      WTmLFwNXKMSTh48oNvqMmwWmzhCt3DPy1TaZVxnS21uMTI2eXsTj9tJpNshVmmxurNPvtRgZ
      MNYLPHlZxDRhPBpy49YnNHPPeH6c58WrDJFIgHZ/yrBVIVes8SJf5tb1PTrNNq3BAJ9qyE8A
      8eOIpMI8e/iYzZ09stk8yeVNeh0d0+4g7PcTunqT5MoKhUKQaCjAk4NXfPr5Z5QqOgHfMuVC
      idXLtxn02kRiCUr5Ius7CeypFTpDk52tFI8OK9gUsNscpNNp7IaJN1AjsLRExGPn8YPfsbq+
      SWpsxx8IEwr68HnbTE0HaE2C0TAOm0IilWLJbiNXqr+5CK7X6/P+cxTiXJVSnkB0GZdq/1F/
      X0WeBhVWJkWYsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCw
      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
      WIpEubxhRx9PKOXzaE4v5UaDQCrEUsxD2B+Yx9xgTqnX6oxMhZFpZ6I3iHzdBHtiI3CH+ejm
      TSZIASYu9r2b4FG/Q6XRYzX5/txblyZYXESaYGFps01w8RWPMzq3P/kYjzZzfgbHr07Y3Eq/
      i9n+hNdN8NjuZNLRiaxfwWiXOSk3SIY0wokNXh09Y/3yDVKxOV2miYV3ziK4QHvkZv/xfQIR
      L8ZAoXPW4Iunz/jJX+ySzdXJn75E9Tg5K0/573//17PHzLwTr5tgXyBK7cxOPOzH5lfAFSbk
      GjOxaWgOg3JVlwCIC53bBLubPTRVRVFUKqUTzKnG9nYah6oSi8dwOcaoLi+7V5bn9OHnD03w
      cPL6BPvWAHbWYqyk4rx48gCbd4rqDLB9aWVeE4r3gDTBwtKkCRaWNtsE5w/Im0m2Eh6m4zHF
      F8fE9nbQpqCYUxS7yqhf5bQwZe/qPAqwb5i8eHof//ImmcMjNq5cY9quUNS7OM0RkeU1aqUM
      gaVLbK3KE6HifG8EQFVVfJEk7nKXWnPEsNHAGY6hjIZU6h2UcQ+7y0O/02QpuYGqzne/wPbu
      NcaoNEI+VIeD1a1tfHqDWqmELxAkHtpDcfpwOGZyLgQgPYCwuLndxBFiEUgAhKVJAISlSQCE
      pUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJ
      AISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCE
      pUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJ
      AISlSQCEpUkAhKVJAISlSQCEpUkAhKX9P6m7bfs9TNYcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='84' name='KPI' width='192'>
      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
      iNH+CzP99MUb3snIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='84' name='KPI (2)' width='192'>
      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
      iNH+CzP99MUb3snIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACIklEQVR4nO3TMQ3AMBDAwLR6Kfy5Zm9hZPAdAi9+zjnfzCwomplZe+/bHXDFezsAbjIA
      aQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5Bm
      ANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYg
      zQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIM
      QJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCk
      GYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoB
      SDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0
      A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMA
      aQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5Bm
      ANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYg
      zQCkGYA0A5D2A4Z/BYqFi3WjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACIklEQVR4nO3TMQ3AMBDAwLR6Kfy5Zm9hZPAdAi9+zjnfzCwomplZe+/bHXDFezsAbjIA
      aQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5Bm
      ANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYg
      zQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIM
      QJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCk
      GYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoB
      SDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0
      A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMA
      aQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5Bm
      ANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYg
      zQCkGYA0A5D2A4Z/BYqFi3WjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Nav' width='192'>
      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
      MhopgKAdawAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='RecoveredGlobal' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAALDElEQVR4nO3d2XMbx4HH8e8AGACD++IhiNTByC5bccpKJfui2rzkD88+bWV3K6mVHSe6
      aZEiCR4AcR+DwUzvw5ZqbYmpAA4AL9i/z5sOTjUkfjHTw+6BY4wxiFgq9nMPQOTntLQAwjBc
      1qFE1kZnALFaYp6/ZExEt9snn/MYjAMSZoqPSzaVJIpCPM9b9ThFVmKuAGa+T3cwIJWMM+gP
      mE0nRCbiuHlF/dFjUqmIKIrQfFo2zVwBRGHA2ckxafchx8cnVMsZZiSpVCuMhiNi5TzGGOLx
      +KrHK7JUzrJug4ZhqABk42gSLFZTAGI1BSBWUwBiNQUgVlMAYjUFIFZTAGI1BSBWUwBiNQUg
      VlMAYrW5VoNOJ0Mu2wNKXoJGe0jJi+Mbl2LOI5jNqJTLqx6nyErMvRq0cd4gnIVgDJEDjjFc
      HH/PwZOnlLw4YRjiOM6qxyuyVHMF4A97fPfyNdtbW3SHPsV0jCkuxWwaPzDcre9oObRsJO0H
      EKtpEixWUwBiNQUgVlMAYjUFIFZTAGI1BSBWUwBiNQUgVlMAYjUFIFZTAGK1ufYDfHB59p7W
      ICCXNPjGpZRLE4RwZ3d7VeMTWamFAki4LtetBtn9O6SM4d2rv/Hw66dEkT4fQDbTQsuh+50W
      V70J+SRMcSlkMwRBQKVS1nJo2UjaDyBW0yRYrKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoK
      QKymAMRqCkCspgDEagsthz46fMVFZ0w16+LjknMdSBe4V9d+ANlMCwUQj8WJGYilMngmotW8
      pH6wrf0AsrEWWg49HQ+4aA+p5JJMSZJJuYThjEwmo+XQspG0H0CspkmwWE0BiNUUgFhNAYjV
      FIBYTQGI1RSAWE0BiNUUgFhNAYjVFIBYbaHVoO3mBVedEfXtElNcsqkkURTied6qxieyUgsu
      hjO8f39CFIZEJqLbvKL+6DG1YpYwDHEcZ3UjFVmBhc4As3GfeCrPtH2GT5JKtcJoOCJWzmOM
      0WpQ2ThaDi1W0yRYrKYAxGoKQKymAMRqCkCspgDEagpArKYAxGqf/CR41G3xxz89w3GS/O73
      v8P9OUYlsiafnAEyxSp7O1X80Zjo5xiRyBrdeAkUjwUkYtl1j0Vk7W6eAzgJxqGvyx+59W5c
      DRqMfUrVIiE/LmTc73B2PaCQcvCNSzHnEcxmVMrl9YxWZMluDGAS9Hn31z7/8vQ3PzoLnJ2d
      EThpJnEXzISX3z7n4MlTPR5dNtaNAZTLuzz69S4f7/OqVKucnl8TJg0hLg8+/5Jx95pKdkf7
      AWQj3RhAOpXkmz/9kd/89lekfvD75doO5drOmoYmsno3ToJHkxmPv/pSk2C59W4MIJhO8QdD
      Zusejcia3RhAFE/z2b064bpHI7JmNwbghtf8259f6RJIbr0bA8iWalRzKXRTU267T+4CXb19
      zrN3RwQmjp7yI7fdJwG4mRxpN0Uin9AZQG69v/tcoN5Vk/RWjeScB9JzgWQT3TgHOD95x4vD
      o3WPRWTtbr4NGobEEws9NVFkI918Bmgc8u9/+C/9HEBuvU8CmAy6TMmxvVda7Mm5Ihvok+/x
      cOoznYXsbO9+chfo/bu3+MbFmQ7wccm5DqQL3Ktvr2m4Isv1SQCTQYdn//2MXHGHf/3ozzzP
      4/T4nN2tCp6JaDUvqR9saz+AbKyFHo/uj/o0uxNK2QRTkmRSLmE4I5PJ6DaobCR9PoBYTQ/G
      EqspALGaAhCrKQCxmgIQqykAsZoCEKspALGaAhCrKQCxmgIQqykAsdpCe15mkwH/8ewld8qe
      9gPIrbBQAMfH74mmE0hW8dB+ANl8Cy+HnkwmhNOx9gPIraD9AGI1TYLFagpArKYAxGoKQKym
      AMRqCkCspgDEagpArKYAxGoKQKymAMRqC60GHQ86tPpTylkXH5dsKkkUhXiet6rxiazUYp+B
      YeDy8pKwmCMyEcfNK+qPHpNKaTm0bKaFApj4E6a+z9SPEZCkUq0wGo6IlfMYY7QaVDaOlkOL
      1TQJFqspALGaAhCrKQCxmgIQqykAsZoCEKspALGaAhCrKQCxmgIQqykAsdpCq0H77SanrT7V
      XBLfuBRzHsFsRqVcXtX4RFZqoQCyhQKp7hh/FmHMhJffPufgyVM9Hl021kLLoU/evWE4i+Ml
      IgJcitk0fmC4W9/RcmjZSNoPIFbTJFispgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYA
      xGoKQKymAMRqCy2HHvbaXA+mMB3gG5dSLk0Qwp3d7VWNT2SlFlwNamg0LgjDAGMMF8eHPPz6
      KeVMgjAMcRxndSMVWYGFAui1rzg+bVGr5QlxKWQzBEFApVLWcmjZSNoPIFbTJFispgDEagpA
      rKYAxGoKQKymAMRqCkCspgDEagpArLbQYrgPhr02Pi7ZVJIoCvE8b9njElmLnxCAoXndJTIR
      x80r6o8eo+9/2VQ/4RLIYeaPGE8jKtUKo+Fo+aMSWRMthhOr/aQ5wMc+fD7ADxljfrQ/YJW/
      /kd/N4oiYrHYXMda9/E+vP/M+1o2+bV+fLz/D2NbSgAfBvHDwfwzPv6m+Gc5jrO0sS37eLa9
      1mUebxnHWtolkMgmWsoZ4INxs0HbSeOEESknwLhZsi4cnzdJx0JI5rh3d/fGr200GiSciGS2
      zKBzSWVnj8H1BWfNHtXUjMzer6jMfbcp4Oy0RRD41GoV2r0h9Z0ah6+fE5gEMxJ88fkj3Ph8
      77qdywZ+zMWJuTh+HzdfJRYMefH6iId7ZSbJLfZr+XkHx/nRW3pRkko2AWGMi2GfLw5+wZsX
      fyFfvUt9pzr3sV589w3l3X2C8RATBsTSeeq7FZ5/94I7uzWOjt7z4PETSt48/9VT/vyf3/Lo
      i88ZjCcM25ds7x2QSRi+Pzn/308Ginkc3NtjnhNW6/SY81HI3laBEIf3h6d8+fUv6bcuOD5v
      4cUj4l6Rzw7uzzG2iO+efcPu/YeMB0PCYIRXqLFVyvDq5SscA+NEhq8+/wWJOU8Kb/72bHk/
      CDPGMPGn9HpdDg8PGYx9JsMe6WyefCbNaDTi/OLi735tEEzptNu8efWKCIdut4MTi/HgwQNq
      W7WFxhLOZoxGfc4bJ7x4e0YUhYAhmSmxVfAYDXq0+8O5X5c/ndLrdvj+8JBxEDLsXpNIJMh4
      KYrlGonY4pcvTgzevH5Ds9mklInRuB6QTns0m1cLH2vSvuDo9JTOBKajLmEUZ6tWYRrMqO9u
      MQnChY539P1bzi+v8HIlWpcNkl6WQi5DOu3Ral4BC1w0xBzevn7NVfOKarXI6ck5jhPj4YMH
      pHNFErHFLkB6jWPeX5wzjlIMui0AvHyF3fouZtBkFET/4Aj/J1uqLfMMEDFykuxX0xSzearF
      HAYY9Tv0+wP27h/QG05u/MrpeICXK+GlXLbuFsikXXBidJoXXF9fk4h84l4TvPlCaDXb7N+/
      Tyqdplyp4SbiYAzTyYj8Tp27uwmqxex8ryoMiBIeO9ksxVKNUs7DADN/RLG6RafTYxI4UMnN
      +e8E1d09tlMpyuk4sWSGfq/H/p0cHZOnsMCZBODhZ1+QSro47hH5QoHJDBLM6PX7FGs7+KMh
      9XxyzqMl+OrJ18QJOLlsk0oYipW7TIY9er0e29vb7O15zPX2DxRqO5RTKQaVHJMwxrjfZf/+
      Pp2rBu12h2rOI5EpzTk2h8++/CVJN0bs6IRCwSN0imAMk/GAqLBDZWeffGr+9/RKdUtzALGb
      1gKJ1RSAWE0BiNUUgFhNAYjVFIBY7X8AbqPbjKngMrwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAO90lEQVR4nO3d63Mb13nH8e/Zxe7iQgIEwCtIidTFsa04id1ML3Enb9pXnfyn/Sc6k6Zt
      OpNx7InHsmzebwABkCAA4rLX0xcAZWlEp0BESgbP8xlxsACJ1YG0P+wePg92ldZaI4ShrPc9
      ACHep1sPQBzHt71KIe6M7AGE0SQAwmgSAGE0CYAw2kQB0DrhYG8XPww5PqkSBQOq9XN6nRat
      Tg/fDxgMBnc9ViFunZqkDqB1zP7ONq3OgAcrBY67sOABSoFOaDcbrD99RrmQI45jlFLvYOhC
      vL3URD8VhwyDEK0TTusXZPNFWp0B+bQiUA6lcoler89ScR6tNbZt3/GwhbgdE+0BphHHsQRA
      zAyZBAujSQCE0SQAwmgSAGE0CYAwmgRAGE0CIIw2YSuE5vT4gMHQ5+DwRFohxL0xWSWYGM9N
      s/PiW6Io5CqIyNoJw/6oFeJg3ArheQlJkiCfshSzYrIAJCHPX2yzvFgkCAboOKTV86UVQsw8
      aYUQRpNJsDCaBEAYTQIgjCYBEEaTAAijSQCE0SQAwmgTFcK0jtj5bpvi4hLN5iWrKwvUW30W
      Mha+dijMZQijiFKxeNfjFeJWTXhWCE2rWadarWF5Ho6XI21DokBpTe1gjyeffc5CxpazQoiZ
      MlkA4gFf/Pk5a2srtNstvEyevu9TSFsEOBRyafxIs762IpVgMVOkFUIYTSbBwmgSAGE0CYAw
      mgRAGE0CIIwmARBGkwAIo03VCjFfXqF6csjGyiLV61YIHBZyacIY1laX73q8QtyqCc8KYZOb
      y9FvnXJ6dk42V6A4lyZR4GnN3ovnPP70NySJnBVCzJYJWyGGfPPNDpXNLVQSkiKmdtl/2QqR
      z2UJw5BSqSiVYDFTpBVCGE0mwcJoEgBhNAmAMJoEQBhNAiCMJgEQRpMACKNN3grx7QuSVJph
      +xxnYZF+74dC2JyjIJ3nYUVaIcRsmbAVApzMHEvlBS4LBaJBj3Q+B0qR0QnnzTqVJ8vSCiFm
      zmQB0AmBP+Sy26N7dcXGxjqdqyH5tEWAS6WyQRxHWJYlF8gQM0VaIYTRZBIsjCYBEEaTAAij
      SQCE0SQAwmgSAGG0iQKgteb0+IBhEHB8UiUKBlTr5/Q6LVqdHr4fMBgM7nqsQty6Ca8PEHHR
      OOfw+JSNlQWOu7DgAUqBTmg3G6w/fUa5kJPrA4iZMlklOAl5/mKbtbVlTusXZPNFWp0B+bQi
      UA6lcoler89ScV4qwWKmSCVYGE0mwcJoEgBhNAmAMJoEQBhNAiCMJgEQRpMACKNN3ArRarXQ
      ccjB4Ym0Qoh7Y8IPxWsuWi0Sv0erUeMqiMjaCcP+qBXiYNwK4XnyoXgxWyYMQML52RlhIU+S
      ROg4pNXzpRVCzDxphRBGk0mwMJoEQBhNAiCM9sYkuN8+53/+9CVKufz2X36L8z5GJcQ78sYe
      IFsos7FSxu8PSN7HiIR4h248BLKtkJSVe9djEeKduzEAlqV4sbcjEwRx791YCGvUL3m0VeG6
      QKB1zP7+MQ83ltnePWV1ZYF6q89CxsLXDoW5DGEUUSoW3+HQhXh7NwYgjjX5fJ7rczsoZZPO
      uNSOT0kIaVz2yaRgECUoPeTbr57z5LPP5foAYubcWAmu1Wqsrq6+vK91xFdffMXSyjKdThsv
      k6fv+y+vEFPIpfEjzfrailSCxUx5IwBax3zzp/9luz7g3373r7hTrlACIGbJG4dA3WaDbuLw
      eLMkk2Bx772xjWdyGerVExr1JnIkL+67N/YATrbA2nKR2Mq8j/EI8U7deJRTLuT4y7fbyBk+
      xX13YwDCxGZzdUlaIcS990YA6t/9hfzjX/JgtSwBEPfeGwFYfPSUnS/+m3YM6fcxIiHeoR/9
      SGSn0SS9tIjLqDbw9dfP+eTnH/H7P/yRp5sVapf9l4WwOUdBOs/DyrLUAcRMubEVona8z+HJ
      OZ8uLQKjVojFpTL1k0MindAdJpTyOVCKjE44b9apPFmWVggxc24MQBLH2KkfvqV1RK/dobiy
      zj//Y4WUpWlc9smnLQJcKpUN4jjCsiw5K4SYKTfvAaq7/Nd/7vPs178CQKkUTz/88LWfWVse
      1Ql++NTAtE0TQrx/b0yCh1dtAuZY3liY9KRBQsysNwIQBz5BFLOyvCqtEOLeu2EPcMmXf/6S
      vZOaVILFvSdnhhNGk45nYTQJgDDadNcHSEL2D47k+gDi3pjq+gDZtIeHz4uDOtmUXB9AzL6p
      rg9A6HPeC1gszNHqDOX6AGLmyW+BhNFkEiyMJgEQRpMACKNJAITRJADCaBIAYTQJgDDaRIWw
      6+sDPFgr82K/yoPVEmdyfQBxD0xcCKvWqiRRzGIOvj5LWMkpEgVKa2oHezz57HMWMjZxHKOU
      fJJAzIaJAnB9fYDSYpnL9hWLi0UuOn25PoCYedIKIYwmk2BhNAmAMJoEQBhNAiCMJgEQRpMA
      CKNJAITRpjr9p99rs3t0xupymWZbWiHE7JsqAL2rK4J+l7N2lrkUDKIEpYd8+9Vznnz2uVwf
      QMycqQKg7BSu5+Bamsve8GUrxKMPP2bQuaCUW5GzQoiZIq0QwmgyCRZGkwAIo0kAhNEkAMJo
      EgBhNAmAMJoEQBhtqkLYsHPBzmmLxYU09euzQuCwkEsTxrC2unxX4xTiTkwVgObFJbbu0+zY
      FOfSJAo8rdl78ZzHn/5GWiHEzJmqEhz7fb7fO2JpqUyrO3jZCpHPZQnDkFKpKJVgMVOkFUIY
      TSbBwmgSAGE0CYAwmgRAGE0CIIwmARBGkwAIo01VCdZJxO//8EeeblaoXf5wevQ5R0E6z8OK
      tEKI2TJVAOonh0Q6oTtMKOVzoBQZnXDerFN5siytEGLmTF0JHg6HpCxN47JPPm0R4JL1HOI4
      IpvNSiVYzBRphRBGk0mwMJoEQBhNAiCMJgEQRpMACKNJAITRpqwEhxwc1dhYW3yjDpAkMZlM
      5q7GKcSdmKoO4A/6XNRPuQgcsqkElAKd0G42WH/6jHIhRxzHKKXucsxC3Jqp9gCD9jlH5z0W
      C3O0OkPyaUWgHErlEr1en6XivFwfQMwUqQQLo8kkWBhNAiCMJgEQRptqEizET5XWoNEkiSaK
      E+IkIY41UZIQxwlxoonjhChOCOOEKEoI41gCICBJNN2+z+XVkKtBQBgnhFFMGI1ug5e3Pzx2
      vQGF0XijGt+PY41Go7VGa0jGt1rr8bImGd+fxKu/UP//nqGUwrYUKcvCthW2ZWHbFilLYdsW
      tmWRsi2c1PjWtiQA95XWmnj8bqi1Hm08Gjp9n52TC7ZPLtg9vSSIYiylyGddCnNp5rMuTsrG
      Sdm4KWu8bJHxvNFjtkVq/Jhjj77/6kaVsi2UUigFllI/ugyj5fdNfg36nkRxwsAPGQQRfhAx
      DCKGQYwfRAyCiOH4e8Mgwg9jgvD6Nn7lsRj9V94XU+N3QEvxsjiZS7s8WS/ydL3E40qRtGv2
      e+Bbvfpep3VvWyGSRI8OA8bHjS+/omR8KDD6XhDG9IYhvUHA1SCg74ejDXS8QQ/HG7FGv7Y7
      ty2LjJci7TqkXRvPTZEef2XcFGnPYTnnkXZTeI6Nm7JxndGy56ZIOzauY0vV/S29RQA0zYs2
      iU44GLdCeN5odxtF0Wt7giRJsCxromU9Pk68Xv73//iG6kXv9b95POEZ/3n5nOtjy+vlRGt0
      Mjr2TK53dK8cf17/rLLU6DE9eqdMkgSlwHNT2EqRSlm4qRSWBY5t4boOKQuclE3adci4NrmM
      y8Pl+dEG7KXIeM7o0MFNkfFctE7GhwDX63/bZQjD8LXHJ/03htf31LOy/Dbb0Y8tv9Uh0M6L
      b/CVw1wKEjfP1sbKrR8C9QYBfhi/9tjoTW+0ESi4+TjTUi/vW5ZC/USOOcVPi8wBhNGkECaM
      JgEQRpMACKNJAITRJADCaBIAYbRbr4NrrYnj+LX7r1Yrp73/apFD1ne/1/c+xnbrAbAs67VB
      vK1RIUvWdx/Xd71B3tb6/pZ13XohTIhZcietgINmlZZKo2KNpwK0kyPnwGGtSTHnsHNU55/+
      /u9ufG6vWaWjPFSicPQQ5c3jqZDvvttjZWONeqPFp794NvFYOo0qfeWilI0d9rCzRRw94Pvt
      Q8orZWpnF/zDrz+deH3t+iEHFxEPlwtoEg6Pm3z48c/wu2dc9l02NxYnXhfAeXWf2hWsl3Og
      NPtHLZ49+4DqwTZWdoEHa5NfdafdqHLY7LK5tkgAnO4d87NPfk7Ya3Pe6TNHh6DwAZWCM9H6
      WtVjTro+D5cXiJTiaPuYj371CX63RetqiH/VorC8wUp5YaL1He3vECiXYtbBTiXsHg/55c8f
      UT854KIfYgc+j3/xCe6Er3fnu+e4c2UcAuIwJki5bFVWONrfpeeHBMOIDz7+iKz346/31ifB
      WmuGfkCnc8ne7g5XA59hr0M6N898Nk1xocDm1uMff+4woNMePbc3DBhctdEa1h89Im0rtra2
      phqL74/Xt7NLP4jod1tordh49IjlhXm2Hj2Z+jUqZbG9/T2NRoNiqcDp6RmFUhnX/tv+OZVS
      fP/9No1Gg1JxnpPTOv1+n3rtjGTqlVnsjMdWKhc5OT5hfqGE59gslpem7x5Vip3t0djKi6P1
      5Ytl3JRFv9/nrFabanXW+LU2G+eUChlOai2UnWLr4SZLi+Xpxgbo2Gdnd5dmq4Mb9WgHCjvl
      srG2xHA44KzR+usv77YPgXQSc1qrszCXpjNMKBfm0EAcDDiuNlirbJCby9yYPJ1EVM+a5LMu
      VwGU8jk0EAyuqDZazOcyDELN482NicaSxCG1xgXz6RT9yKI4n0UDfr/L2XmbSmWdTDY91btA
      FPoo26PXbjKMLYa9LqvrD7i6OKPVC3n06OFU6wtDH8v2uLqsE2iHfrdD5cEDEr9HqxeyulSa
      YmwBynYYdFt0A03U67CysUn/skGjPSDnKULlsbm+OtnYggDbcei1L+hHimG3TeXhFt2LM867
      PqulOULlUSrMTbQ+P/DxXI/zehXlZmi32mxuPaR6tI92ckSDNpn8IiuLxcnW5/t4rkv15Ih0
      bp5u3+dhZZmDvV3S+RI66FNcquA5P/4/InMAYTSpAwijSQCE0SQAwmgSAGE0CYAwmgRAGO3/
      AJHsvka2FNMHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 29' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFVklEQVR4nO3dy24bdQCF8TOOL/ElceLUjt02TVFbioQoRV2xQOqGJ4AdSyS2PAbPwhOw
      rFiiVhQoFfQC6QW1pEHx3Z7YEw+LlgGkggQiMyjn+22SmUVyFvkyf2fhBHEcxwJM5bIeAGSJ
      AGAt/8eLwTjU3cd7WW2BgVOdpsL5YdYzEn8K4LuHz/ThJ59mtQUGPv7ofe38Msl6RoIjEKy9
      NIDGel1XL59TpRBIksrF3x8Um2u1dJbh2IrjucbdnqbDrp7euaFBr5/ZlvzLbu53++qul3Vm
      q6NGMacTzboe7A50br2onb2xdnujtHfiWIk07vWVL0WahQeqBUFmS/7yCDQOZ3q+a6HHe0OV
      lqTeZK5ROEtvHY6pkqb9R5pFUr5Q0mya3WuClz4BJOn+k/00d8BIEOS0ffmdrGdI4kUwzBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEA
      rBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArBEArOWzHgAv
      242ylvNB1jMSBIBUlYuHqi0fZj0jwREI1ggA6YtjjUdDRfP5i8tYw34vkykcgZCJ3Qd39WS3
      p87GshbljhbDn9Q4dV6VjbaqxfR+L/MEQCaqjZZWa8sa9AYa93uqbrT18P4dVVL84Zd4AiAL
      QaDNk1vaPLmV3Do8GKm00lTafx8iAPwvLJVqapbS/74cgWCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNf5GEVDUqBeWDRdYzEgSAVI2mB+qNp1nPSHAE
      gjUCQOriONb1a5+p2xvrIJxq2O8riuYaj0aKZqHCMNR4OFScwhaOQMhENJ/r6aN7Wl+r6sbn
      17R69i3VSlKtGCt3GOnbuzt6970PVCse7Q4CQCYuvX1VsaRquaALl65opbWteq2ocLCvMIp1
      IVdWaenodxAAUhcEgaorq8n1a29eST6vvbh/ejudLbwGgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDXeGhGpyuUCLeWCrGckCACpKhfympeO+C2f/wECQKrGBzP1p2HWMxK8BkAGYkXzmaLoMOsh
      PAGQvjie6dYX19V85bziaVf15mlNp2NN9n/WIldSq9PW7rOuGisFTeZL2misSYFUrlT+8y08
      AZC+xUyF5ar2nvyo2zdu6t5XN1WorihXCJQLIt279YNuf/O1+qOJFtFUD7//Uv1JdCRTeAIg
      dcFSTZ1TG1KprnarpUp9Uyu1impnXpUktTZDndhqq91uSoq1M5lo88Tq33/Rf4kAkIFAG50z
      zz9t1JO7xVI5+VhdW0/uX3z9jSNbwhEI1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1oI4juPfLgbj
      UHcePctyD465i2dbmh8usp6R+BXDjQjxF2G62wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 30' width='192'>
      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
      RqNR+P+NAqhcrrAfUgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 30 (2)' width='192'>
      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
      EV6/4gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 31' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SummaryTable' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy953NbWZqn+cB7gt57K4pGoijvTSqdVGm6TPe0mY6KiY3ZXvMndHRvbOxs
      9Mfd2I3pnZndmanpru4yWeklpbwlRe8NQAIkQHjvPXD3A5WqzMpUdmYlWaVK4YlgBAlc4r7n
      Bs6957zm94oEQRAoUuQFRCQSicS/byOKFPl9UpwARV5oihOgyAtNcQIUeaGR/r4N+O4iEAt6
      8Uez1DfUI5OIvnhEIYfL6aKsug6lTPL1P7qQJhTNU6pXs7S0xPz8/NO3mpqaOHny5E4M4Cm5
      TAa7zYZUrae+toIvjuSztmUIRXOU6tXf6pxBj4NgLE1lbQMlavm3+qzfJB2PUZApgeITYNdI
      +Db45Qe3cXtcxFP5Lz0malvgowdL2I1z2IKZb/DhVt7/ZA6A2tpahoeHn/60t7fvhPmfI+T0
      8cnNKWbuf8iDBfuXHlOIWbh+3wBJG+9fm/7W57zy7jvY3Zv8/N0b3/qzfhPz5EMWtgJA8Qmw
      a9iNRpr3H+fwvma861P8fw+WkChKGKpNMu7Tko7E6C0JYHHq8eicSKQ1vPvT9xgcOsTa3ATi
      fBxxTQexcIEzPVoeLKxT3XWc8vgKrliMtHQQgOXlZW7fvg3AX//1XyMW78Y9TURj+x7OHy7h
      Z+89xD+XwB5McOHtP2Lt3icYAxmO95Zw446TtrozuMzz/D//1yJnXj7K1Suj9B85yYVjA9/o
      biuWqWlpbWLFMMvG3B2ujayga9hLq9TDZljE/v4uxidmQaymvkpG98HTzI48oFSSZMXqY9+Z
      0yxdvUv7sWNknKtsusIcvXCRpdFHRP1Bhn9wYPs8u3C1igC6Mh1ep5tsNs260crBi5epkYfw
      heIMHH+ZWk2Ort4Bho+fpFRWIJfLo6vr4vTwHuRlDZwZbqVl/1mqlGnmZ+cpa+ykvkyOJSri
      +5fOIBdvL0T27t3Lj3/8Y/7mb/5ml778vybosKJQyJiz+Onq6kEWtWNNSMingtS0ddM/eJTO
      ulJq2wc51t1IJCejraEMl9OFUPhm58qnQnzw83do7h9ifWEOZWUzTVVqbAGBN7//FkSd7Dn+
      Km2aMBU1dTy+8zHyyjYW5sy0dnZRqpEi1Tdz8VAr86sOOrp7kMds0HSAMwd7ny7jihNgl6jp
      PkSnNsRHn9yjffgwlvE7yBsOsKe3nxqthI6ubrTl9bTX6Chr6qW2XMverlZEEjk9nW2U1HbS
      oFfS2d3N+UuvI0nGkCq1HO6u45NHRjraawBwuVwYDIZdHYtSpyS8NcvEZp5Lb17i8ol+oskU
      qrJamsrU7OkfQl/ZQaXYiskvsKezjoqmVirVCpBIqK2pQvSVG4cv0jt8kn/zV/8zyoiNwXOv
      oxMSiBR6jg938MkHH6FvHSJseESmZpihoQFKUHH08ACvXT5NIpZAJtfRP9gFigouXzxELJ5E
      1zxIfXaDtWCB6hIVAKJiJLjIi4pIJBJ9bg8Qi8XIZL7BZqxIkT9wPvcEyOfzFArfcLFWpMgf
      KHK5XFRcAj0nCPkMZqMBaXkjLTWleG1mPHExPV0NrM0tkpJp6OvtRi7KsraySiSVpbSmmRpV
      jnV7kK6ebtKBLTYcAepae6iv0O6ccfksRsMKsYyY3oF+VKIMJouHjrZGABIhD8ZNFx29fYiT
      PtYtXtp79qAkid2XoLWxZkfMKOTS2B1uahuaEeViGAxmGrv2opPlWTOsoq5qpalaj1DIs2U2
      kFFU0tlYwZZ5jThautvrsZlWSUr0dLU2IBE/Mxkuy7WPPiSdy3P32vtYjLP855/8lF9cuUuu
      UJwvu4HXsoQjJmZrfhKb3czjFSdqpRQhZmXVnadUr3visRCjLdGjFGew2Jw8fjyJShJjYt7M
      4sIqJaWlKOU7693OxgKYnT7KSvVIRGCeH+OT0dntN4UM4+OzKJVSxsYfMzE6i1yWY2JmGcuG
      GcOaacfs8NktrJsMRNICq5NjJBB4ODLB6vRDglkZUtH2dzPiM2N2pAitTbNgMGN0Bgm5Vlic
      mGTZk8JjWcXujwHP9AIJRMJhBARikRBemxlVbQ8XTh1BIv6G2/kiXwu5SotjfR6HY52JFQcZ
      v5Ml4yaxYAy328y6xUUBQCylrqkFIZ1hcF8/OrXA7Nw6+go9iaiX+fklYuncjtqWyYnxbZlZ
      MW2RCrtw5Svpqvk00iulQgMzc/Poyhoo0+aZnV9BV1pKZ+8AZRrljtlR3dJNc7UeEIiKtAwP
      7kOnyOBxBrBtrGJ1BxEAuVyD32Zgw71FICoQdW9hdcaobWsiurWOLZBAq/4XIsHbKyOBQl5E
      x7E3GK7N89N//BnJXHGPsBvoqlv5ox/8gKaaerrry2kZOkZ3tYiNcAl//sdvo8l58UfSAAhp
      L36qqFQlCSR0vHn5FM4NOwdOvsylcwMszK3tqG1SXRmXvv/ndCl93J1axbQyy+PRSTY8EShk
      cMWlvPXmJTyb87jiat68dAG33bajNnweEbJMDH80SiIpoCuv4PTFV4lsGkkDipIa3vjhD9lT
      X4tcmqSu5zCHeqtYHFug6cBJDjSV4Q5Gtj/py/cAApO33mfZEUWmb+RQq4KJZSuRjJwf/9lb
      yCXF8MFOk4kHuHP7HlXdhxjqqmHu8X08OT0nhzsZuXsXWXUX+2qyGOKN9OoTZMvrqVBKsK5M
      MWlwcejkWTKOeeY3wpw4d47qkp278+YySUbu3CKtaeDc8SGkYjCZN6iRx1mIVdAq9TI6b2b/
      8XMoohuMLVo5cPwsQeNDVrZC1HcOcfpw77cOOlkWxxhdMCEpb+HS4Xbu3Jtg4NQFauQJ7twd
      oaHvMHHLKnuOHGL23k1kdX0c7Wtg4sF9gpRw+tg+Zh/dIyqp4MzJQ6jlkuIm+A+JaDCEuqyU
      b5A2t6tEI2FUah1S6fNyQ8wTCsbRl5V8dcLeE0QiUXECFHlx+UIgLJ1Ok89/eeZikSLfRZ6X
      Z1eRIr8XvtxhLBSwrM4wb/Jy4NhJGr4kqCIIBVLpLCqlYrdtfCFIRFzcuz1KPFvg8IljLE6O
      Ec9LOH/uOI9u3EFe1cS5k0dRSAWMMw9ZMAcYOHqK5OYE684Q9b1HyVon8ScF+o6/Qnetbsds
      S8Vi3L15g2gmx6GTJ1ieGCOeF3P+te9RoQLz0gzTmyF+8Popxu7cwh5O07P/GHnnHMtbIfqO
      nGOgtepb2+HeXGJswcypi98j7Vjk3oKVt16/iHHyIWsOH5GCjr/44atkgnZu3h0n5LPTe/Zt
      AsZxQimBfQP9GJeXcHsCnH3rRwBI/vZv//ZvPz1BPp/fdn/mI7z7wSivv/kyIiGL325ny+lB
      W1qGa3MVmy+GXidlftGEVJLDabWSlajRqna2cudFQirX0NHZSiERo6ytl8GeVvKJOAmvm1Rp
      DW0N9VSV6xCJUkxNrNDU0U59fS0t7V1UlUhJCzJCHg+NrbXYrDE622p3zDaJTE5HVyuiZBx9
      yx4q5AUy2QK1TS2opGLKqutJxAPUV5djXLdTV1uB1etFIi7h1YuHWDO4aGqq/lob069CW1qN
      rBBFWVpPVXU1QiZGRVUd9S3tNJZKUFZ3UlemRqYqoWdPF4kkHNzfS2dnJ+JsnLL6PRwY7KaQ
      F+jpaufv/vd/9798+RJIouP0kQ4++OUv2PJ7ufHJGLnQJo9mjaxOj/JP/+m/YvR4sVid3L75
      CblsgpuPJr7l8F5shGyS2fkl6nr3UymOMTmzQnPvIKUqGVqdFq95FXsoAQhIpSp0ahGTkwvY
      zMv40iXs7Wjm2MnjlGkUCJKdvREJuSRz84tUde+jRgVqXQlalZRUKvv5AyUajh47QGmJDqn4
      SSxJEBB2PXZaYMnsY29b5dNXog4zqvo2JIU0s1PzVLT0UVumIOpZR17ZjvzJN//Ll0DZFHGR
      mn17mzGYNgHI5wUkYg9rAR3HBzrIFZ5slmUqWpqbmN1a3s0RfucJuE0sLxqxOjx0NVazvr6O
      3e3j9PH9BB+MkBRr6M35Wd3U0tKkYWHeQN2efcxO3CenKCWaPoAissaqNczp1y7vqG3hUJLF
      OSMWm5vePZ0YllfIieQ0tXpYtigQXCtMza0SzippkARYNHs4cOZV0pYJfv7eLYaOX/jWd38A
      6/IkDx5PobTmONIoYmx8Dos3w/kD9Wjru5GJwLy8RE3PHmz+BN29nUTdZpaNK2w6XBw+dQ6f
      I0XfgYqnn/k5N+hTL5CQx2HdwBfL0dldxU///QccvXiK7u42HKZVsiINtU3VJKMpBCFLZVkp
      vkiCmoqyHRhmkWfh2zIjrW6lVPF8+C58TgvSkjpKNc/L0jeP2WSltb0V8deowNFoNKIvnwCf
      o0AqlUVZ3OwW+Y7xhQnwdBNcpMgLgEwmK0aCi7y4fCES/FmCwQB6fRni30h/zufSxJN5SnTf
      TvioyOfJZxKsTI2g7DxFsyrK3bsPUdf10lWR58H4Ism8lNffuEyFRk7IaeLuyAJ9x47gmB7H
      HYtT2XmQesHO3IaXviMX6G+p+JdP+jXJZVKM3btNoKDhpfPHWB1/gCOh4Pz5k6gkEPZscv/R
      NJ0Hz9DbVM786E00bcdor1EzM3KHiu4jtFTtYIEOEAvYuXd/jKaB4wx21GCYvEOu5iB9TSVk
      k2Ee3LkH5W2c2N/KxMP7hIQSzhwbYOLBfbKaOs4eHwa+IhL8q3f+iYDPyv3Ruc+9nghscOvB
      zI4OpggUBIH6CjWBRAGraY22/Wcpy9vJlnbx/e+/RVdLPRqlDMgyNWvi5Tcu01ZTzZnLb3L2
      yD5qq8vxpWT88Ec/2tEvP4AgSOg9eIaBiixLBhMJbSuvnjuKQgwIOebn1jn12vfoqisl7jZj
      CUYJhVIkvSZMnhiJcHJH7UEosDizxOGXL7O3pZKk38ZWIIDflwAg5DCg7TxBq8iFKSTQd/gs
      vVUFDHMraLoPU6tKEIxuu3C/0p1gXZnh2tWPWbZ4uPKz/5e/+7t/TyCbByHBf/vJz/CYZ7kz
      aaS4hvr2yBQaykt1IIKWzm42Zu8yZdwimcoS8ViRVzSilIiAFBGvjyvv/pI7kwaEQhazPURb
      QwWKfJhf/vNPeby8s7n4UpmYsNtIWNtNpTyGbX6Cn7/zHo5gCgpZgkEPtz76FdcfTTCxsEFn
      UxWJeIRH0xvsaa0kkUyxswttgUDIy4Or7/Hx3TFm5g20NteTSCYpAGUNe4ibHjC9aiSZkxOw
      G0moWuntacAx/xCjI4FSsZ1T+5W1cw1de9kf1NFVnuKeW0Ac9hPOF0Ck5kBjhPdH13nl0vd2
      xMf7opNJhFiZX8WYS9Iy3Ep1XQOpgoy6ShXLj+30HztDIRsnEBXR1FZDXq4kkskQ9W4gq2xH
      JRGh1JTQ2qImHkvsqG0Rf5DJRTvt7SJUNTWUN8SRCinSsQgekYrW5gbiIiWBcByVWoJhxUhS
      mqexUsbKigFphYKh/qad+56IxLS3NOPLywkEYyg0UtZWjNizAl6fDr1WTkV1A6GEmJrcBqMG
      F20tEuypNNryOnLxENHEdnHRMzfBI4/usX/oAA9vXKNp31FMkyMU0DF8fj9eZ5I99QL/4Wez
      /I//9gd8ie5rkW9ILh3HZnORF0uorqoi5Peiq6ilVKsgHo+j0WhxrU4QLuujsxRsLi+VtQ3I
      CykKci0KCcSCXnyRNPUN9ch3MEc/l8mwtbWFIJZQ29BEJuIhlpMhidoIq9voqpJjd7opr2lE
      q5SSz6bIFKSoFFKymRQFpCh2uE45n03jcDjRV9VTopZTyKVIZgvMTs5x6OgwXqcDZWk1JfIC
      doebvEhKfX0dYa+LglxLbVU5EvG3qAeYfnSThsHT1OielyDIdx9BEEAkem6euJ9+dUTfVPZt
      txCE7eX417xGXyiIKcYBirxIyGSyz7tBc7lcsSCmyAvF85FUUgRBKOB3Wgklc4CAz77BypqF
      XKGAdX2FLU/oqbctHnSzsLhCPL19rNdpI5pKYVycZWZmBoszuMO25bFtGFg12Sg8EZ0ybNj5
      VCIqEfayML9ILJ0n4rUzOzODzRMmn4mzND+PL7LDbtAnRLx2/LFtKc/wZ34XCjk215axuAIg
      FHBsGNl0+ilkkxiWFrYlZp7Y/kxhrPf/4T/wy3c+wOQM7YrxRT5PJhHCY55nzZsl5d1kwuBE
      rZAS3VrG4EuzOjdBNJUH0kyOL6AQp5leXCOXCnH9k5s4PXF0JaWo8mE2vbEdtS2dyBAI50ja
      51jeChBO5Ik4VrabeggZpibnUSilTEzNYjCuotTqUSlkjD+4h0il2ZU9SyETY+bBFaYtEYRc
      jNGH11kybU/8sGMVaxCcyzOYtzZZtYewzo9hC8YRKVTYzfN4n0jMPGNrLpDOS9i3fx81iiS3
      7y+gK6tCFrFjCeQ4erCXmcVVksk8584eZ+rhPRQ1XVSKA6zaYpw4c4aqHZTleBFQaMrp7W5j
      MgVOn49M0M2KCRrUcoaG9hE0LZFKpClRqtCrs8wtr9O1/xjLc0vsO3QAMWLqmppxuVwM99Tv
      rG1qJe3NZSwa0uxpqiQfzrIcS1FZIgMEytUwt7BIa+9hMlYzy74U+7Vqgv4IntgSInkJ5SWq
      nZsIgsCm0UDn3kEMBYH1pRV6h4awhbfflil1eC3jSLIBXIpKDnX0IstuEMooiTpWCSa1lDzJ
      YH3mEqiQyxAOhcnEg8ybAgx21mN1+XCY51g2mgmKq6nRpFgY/YR841GODlRw9eNHJIN2LO7I
      Tg31haREpaV58DCdlRCNRrB5IoTCYWQKGeTjeFMlXH75JG7zMqsmK+OP7jOzYiIZ9VBQVqJR
      7KxwSiYew2AJMnx4P+KIhxVrhOEjQ6ilIihkcCekXL70Cl6bke4D57l0/iDGVTPaympefuUU
      tnXTjgZLBaGAYXWRsfFJ5icnWDGtM/ZwlIXFZTKAqryBN956m8aaRjqrFHjCIQIuH4hz9B19
      hbZy8Aa3YyXPdM7qKmrZt28QRWyT+qYmpEIaXzBKaXkZMpkMjVyJIq9C3dDN6Mg1HiUHaWkt
      o6App0xXvPt/UxJhJ3fvLxMTb1B/5gyStSksOT0nzw4z8+Au0poeJKEVJmL17G3RcOP+DENH
      T9JUqSPsd5OXlpBN+2jraNvxJUeuAFumVba2Nujr68GxvoRta5MDXbW4RLXsbavgxvV7DB49
      RTq0wfVxF8PHT1FS8HP7xnaLpJ20SSSW8NoP/hLibjYSOtqq1OSSXhxhJZMP7jM4vI+J+/cp
      ad1HX0ctM48fENQ0M6hOcf/6fWQVzfSWb+eyfY16gCLPC9FQCHXp8yOMFYtGUKq1SJ8XpUAh
      SyicQV/69fYdX7MgpkiR7yZfmADFIFiRFwmxWPz5QNhzE9IuUuR3xDM3wcmgg1v3H6Or6+bE
      wX6eG/3T7yipmI/xmx+hHPoRhyr8/Odf3KWippZ9XQ1Mzizi9Ib44V/8JbWaAvdv3sLu8SKu
      7aA2HcQZ8CBpPEQrVlZtQYYvvMXeBv2u2JkLbPKTD+9TWdXESy+fQyXK8ODmFdyRDHsPnMC9
      NoXL60fVMEinKsDyVpSDZy7QUfPt7XGZFxiZW+fsq2+Tts9za97CD793CfvKKJOrdlTV7Xzv
      7EHyqQhXP/6IUFLB62+e48EnN4jn5bz22mluX/mEtFTL5cvbyhlfPgEKSd795RXO//Gfo8zH
      KORSLK+sUNrYiSoXI5LOoZaD1x9BrlKRiKfo7OnEZTKQkpbQUV/Cpt1LDjn1pTKk+joSQQ9V
      tbXF0PMzUGorOX18mPGUiEQwTEltPX19/bQ019DU3MTYzBpVOgWI4PQrl7EuT5Cv7KOtWoVp
      YQp5QyeWpQh/8WenuDdigYbBXbEzEopTUVtLX18/KikImRzJgoS2tnY2zetcevUNzAujSBva
      mb21RXd3F5VPWpJ+W2rbB9iXTCIIUNc5yEBsu6ilbeA4VfUOFq3bQdtI1ENL7znO6h08GN+g
      5/BZykQeFh/M0Xv+ErqgBV9wO2jwDF2gBGlpOYLfwD9cG2eoScOVqXUk2kYO66MIe1+ixv8I
      X9kBTPdmGWwSMSFR4x97yEOjix9fPshDbyXy4DLH+psxp7zE7Bb++E/e3JEL8V1HWdPOoZwK
      y9oUCs15pD4j5S3dn0k7z7LpyXByr5pCNokzkuNYv4bNJ0JUu5nhUtLQyn6REuvKY+S612nS
      qzhx9CieoA+PPwWFBFtBMacHpCzJ1OhUOR6PL/Pymf27lsUacm9gdmU5sG/v09cEQUAoFBCJ
      pE+bvYjFIgpPLtGn+aJfPgHkeiplQTbDEsrVUgqClKMX36K3voLNkZvsGdqL/94YDc3N+C0+
      WhqkLNuNOKRNHO6TkssXqKxrRprfoKbrMJP/9e9pfulfPTdpvM8jiZCDm9ceYRWM6I7uxbiw
      RFaqZr9WjsFc4GC3jkzExrpPRYPITk3/MGIg5FqnumM/EpGIEnGSf/znKxx5+e1dszMWcDI9
      NUtBqqU3scVqvISsZZ75dSenvvcjvOurtAzuQ4SClgY5M3NGWved3JFzWxbHuPNoApUly/Em
      MSOj02y4U5Rmt3DExfijCVrLpNR1tOIYucJSUsP33jrNvaufsCCoef21U9z+8AppZSmvvzoA
      fEVBTD4TY2VlDbm+hvaGMgzLq8hL66hQgqaylmzYCeoKYuEYpWoRSWT4rBsIKh115VqSYh2i
      dAi5kOSXH97hjT/5c6o0sh25EC8qXss60tp2yp4TYSyX1Yy6upkS5c4Wu/z25Flf26S9s/1r
      CWP9Thpk5LMpklnQqJXFJ0CR54ovTIBsNltslF3khUGpVH4+DlAoFIqR4CIvFM9Mh46EI2hL
      SohHI6i1er5uukc6EaMgVaKSQiiWQqeWEksU0Jd8tZCWUMgRiafQ63ZWQOkPhXw2iWH6McqO
      47SXJLly9S4FVQmnjh5kbuwhSWUV544NI5eKsK5MM7vuZt+RkzRXaZgZeUDN3sPgNTJpdHPy
      3DkqdlCwNpdJM/noLoG8hrOnhpkbuUdG3cjJw/1IClnGHt7C4U+grW2nTZNicdPLwOGTqGIW
      xpe36Dt0gq768h2z57ceRzLEvbsP0DUPcLCvFfiKgpib166Syed5ePNjIplfvxP32jC7wty8
      df1L/9My85jFrQCkgnx8a5TFkRusOP0sLRq/0rh8IsTHdx79NuP6TiAUBGor1ASSBTIhL1V9
      x7j88nlUYoHBE+epUWWJJ3NAhrWtCBdO7cdq3SLmNrPhi5GMplm3+3n5ZA/LK1s7a5sgpmfo
      JH3lWeYNG+ia91Mn82MP50Ai48iZV3n1VD9lFbXUdw5y4dgAVqsNRWk9r104iMvu2VF7flvM
      RgNdB88gDW0QSW+v/L/W9t029SHv2CCTiPHGoWZWgzLG7t5Gpq8lu7WE2R3m4JnzGCZGiflD
      DL6xHYRxb0wTCvfwV6f0vPeLVdLuGQwhJYmsmGOtCqY3QyRQcqBaYM0dJUAZo5+8w2YgSWXH
      QULLd8mLIaWoIh2J8Sd/+Zfov6MiFFKFmnK9FnMKCnItrqWHvLOk5PzFi/hMi6gqW9FrZSAU
      qNTkuXZ7lNbe/UwsWOhqLCeRSqJUaVHpK5GkTTtrm1xCxLJORNtJrTSCXKNBJNETj6ehVApC
      gTmjl+Fj3SQ9Zu6OLdE2MIxGKTCz4GDf0O4E5b4pWZGEWo2atE5JKrO9133GE0CMkM+SzqRI
      JEEsZNlz8BzVmjy5bBaZvoGunj2c6q9j3uikrbMLedwB9fs5eWDP0w+taRugThLEHkmRTmXI
      CyIOnnoFleDHavfw0quXkQsRNtwxLr1ykVKViK1AircvncNrsVGQ6zl1tJ/azn10Vkv4zYYk
      3yUyyTALS0ZMq0v4omnq61vRq8S4DdPM22MkIiGSyRj+QAB/tEBrYy0BjxuVSorRuMaW008m
      6mHk/gNklXU7alvUH2R62Uk+GUQhVbKwMMXikoMyPXhDcRJ+K/KKFmRCGrs3QmN9JU6ni7s3
      7yFTivH5w8+FemClRs74xGNMzhR69XZS+TPToT0bS4zMGmncc4A2VZCQppfI1hzNVaV4xdXk
      bFP4ZfVU5TwYnTGGjhxiY/Yx0bSUgROnaC0RMbGyxZ4GFcv2GOIUVOvTqBoGsRimqdVKGF+2
      Yg9nePNIO3MmL7q6Frp0GSZWbPQdOkHMsUF7cxmOdAmS4AZ1ew5T8h1tU5DLJHDY3eRFYqpr
      aogGvIiUespU4HD7EcQypAknqYp+GlUpPMEY1bX1qOQSsukUglgG2TjuYIK6uhqk4p1zOuey
      Wew2G4JITHV9I6mQm7y8hILfTFjdQlu5AkEsQy4VEw54CMYyVNfWEve7iKVzqPUVVJd/vebV
      u4qQx+10oCipolSr/P3WA7g3l3g8Z2boxHmaKzW/k3P+oVMUxtpZvjABinGAIi8SSqWy2CCj
      yIuLSCQSPR9JJUUQhAI+xyahRA6EAt5Pf6eAxbiE1RV8upHMpqJs2l0AeG0mZuaWiKVzJEIe
      5peMZPK79xQXClk2DIsYN51P7BGI+p3Mzi2SyBZIhD0sLBlI5wX8jg2mpqZwBuI7bkc6HmR+
      dgZfJEU85GZufplkdnvcglAg4LISeCKURSGDacMGFNhaX2HD4X96Lb90AmTjIa6985/4X//d
      /8nY0uaXHBHig1/d3ekxvdBkEiHc67OsejKkogEctmXW7EmilgWWvSmWZx4TSW3vz6wbG6yu
      rQMF4skMGnGUx/NmHo+OIsS3GF927ZqdsaCHaFqMzzSFIwbk04xNLaBSCIyNTzI2Ok0+6WNq
      0czc0jKlpaUo5Ttdxi/gsNqQq1VMTYwwM72MUl5gYmYJ2L5BONbmMLi3pU82Fsa5NjJNzGZg
      0RllfX4Mf3z7Wn7pBJBpSnn1lfM0dxzgSFcps0sWfDYTNq+D2x9dZ2xmmUAwzMLUGB6fm2vv
      /4pbI3NMPbhPOJNgfGKhWF/8DVFoyunb04FYLEJZUklfdxtiwOXNcnB4gPamGoq5FXsAACAA
      SURBVFLxbTWzjt5ByjUKQEypCibnN2isq0Ctr2bfoaMQ3L0JoC2vp7lWDeomKtWAWIZemmd2
      dhG9Xou8qo19AwPkMjEyYQ+zCyvEdsF/3dLVgziToKWtG7mQYH5hFdOWAwC5Sk//3i4kYhHp
      iBtnrpyuWi2+QJr9+/rp7GgkGdl+Kv3LS6B8HLPVQ8TvwhcJsLDkYKC/C/faBFObcUKLt5hz
      xjGvG9Aokty6+oBgXgJ/oJ6B5w29Oo/VHSEQCm0LY32OLGiaePv1Y2yubxGLhYj6bGSVu1MO
      CRD321lzZTh6dBCFGArZFMGCijffeAXn1ibJoIdwOAAIDJ18k1eP97C0urnjdmyuLCCv7qCn
      vYH9py7yvYvHqK0o/cJxTss66ytzjI1O4IuEsXnCBH0+ZKpt7apnR4JFYpQKGUhVBM1TjHhV
      DJw+Ql1TM2qZlLaB41TLgqRKW1EVlqmubaW5b5BP7v7ffP/M2efGVfeHQiLk4OadRWJiE6WZ
      PlZmZ4kLa9RfOENq+iHS2l6kwSXGtuqQe2dZt/lJokSf9WLyJDh88iyKqJTbE1ucO3921+xM
      J2NsLs9h3VxnX0sVkdI2ehp0XLn2kENnL6CIbHJ/Yp3TF87gM0wyYglz4uwO2yNAOOhlbcXE
      WtMeuvUppk0hzl08x4M7dxg80Mv9mzNERUvUnH+Nfz1wApN5g/bWBsbv3yZb2kH1k5SCHfUC
      bS2Ns+CV8MrZ4edGvOm7RDQYQl32/AhjRSIh1Bo90uelRZCQJRhOU1qq/e0aZBQp8iLxhT7B
      RWW4Ii8axThAkReaZ26C52an6O0f2tFug0W+Hl7rMg8mVlGVNXBysIYrt8ZRlTXw2kvHkYlF
      CPk07//Df6Lnlb/EO3MDbyxL18Fz4J3DnqzgtTNDu2ZbLmjhp1dHqKxs4Oz50yjJMHrvOu5g
      GEq62FtVYM2f5XsvnWTy7hVMrjhDpy/SXV+2g1YIOIwzPJrfoGvfYQTXKhu+OG17DzHU00A+
      HePW9U9IiSu5eG4P7757G115Jfv2tDIzu4jHF+TVH/wp8FUTYG6KltZ2fLE4IqWWhNdKTllJ
      W42WLbuLNEp6u5qL3p5dIBaJUlHXRC5k59G8wKtvvo1tdYpoIk+5VsLG4gyNvf3kC3nEMi3N
      jUrECPQfPk5m0rqrtkXDCSqqa+jt3YtKCiLknLhwGevcKLQP06yTEJuZBCFMRtbGD9+oYHTV
      u7MTQBAwmux0dnVSX6nDYIGWliYsVhNDPQ2E/Vbysmo625spRGOoK6ro3dtPU3MtjY1NTEwt
      Ul+67Qb9ytt71LHML688RizJMTP6gP/4H3/C5sYC48su5m7eJLBzQyryGVr27KezqRqZRIxM
      LKIAPGkASjbi4vqjKZZnplheXqYg11JaoiIW250+XL+Jrq6Fgc42nIYJ7JEn+8VcHEtcQbPu
      s/4pEYJQeKJCtfO3SbFUTkmJhvGJWQ4ePUhFqR6Z6NcpICqNjnzQgDGqZ7i3A79ljk1PkuCW
      AV1T11ORsX9hfSOla+8gZSk7PlUXAy2V5AURFTX1VGpUFLfLu0My7GV2eoqkpplTQ43c/OBd
      bEEp8qSNzbiOf/tX/wOXX73A0GAforiXhdVNlGoFozevMDU1wuQOl0R+lljQxdzsHN6EDFXC
      jtEZxmt30NrdCWSZvneTqYkpHs170Yod/PLjEeobanbWCJGI7vZa5mbn0ZRV4zCvMjU5RUfv
      AQzLS6jKmiFuYd2RpFSZZHF2DkcgT1mJAksoT2/9rwOFz6wHcLkclOq0xHNSynUy1lYNiJQl
      1NfoSeflkIigra3hO1qh+Fzi3DShb2zfbk30HODe2kRd1YjueRHGEjKYzS7a2pu+Vo1CsUFG
      kRcajUbz+TiAVCpFInle4oxFiuw+xUhwkReWL0SCf42A32UnnMxTXVePVlkUtf1dkon6uHvv
      IbKKdo4PtXLvxi20TQMc3deJmDzLk49Y82Q4dfY0ZSoxj+7dpmf4FM6lR2yGxJw9d/p3J1ib
      zzJy7zo2XwxdXTevndrP/OhNNG0HcEyP4IxEKWsb4qUjvbsnj+4yc390jp7DZ+lpKCNoW+XG
      yDzZTI6X3vwjrDP38WX1DLRreDyxTAoZr1/abpDxjCdAhv/2939Pa+9ezD748++/9JUJWC7L
      KqLSNmr031HJht8x5oXHpEs6SVumSYq1VPf04zdM0j18hlLBy9UJJ6d6y5m1J+kty3F9Zp3j
      xw6wMu3k1EEd044STu1v/J3anPSssuAvpa88zu2pOerbTzO8pxL/1irObBn97TvsCfoUIcO9
      G/cZOnMWtUSEVPrpNzXPyP1Rmhv1OJIlDPc0IJJKEeUzjI9Nsf/IUZRS8bOeACBTaWlpamTN
      sc7kB1dpe+MUMx9MoxLZWAuJOXNqiGvv3aB9+AQNhQ3k7aU8/PAaW5Ec//rHP6ZcVdxL/LaU
      VVRxb/Q2yMuoqJRSq1OT1GnIZ/Ogq6JVY+T6nVVElfXE3Xk6anUkkmoaymLceGQE/fDv1mCh
      wMyqm4PHWxm5u0hnUxW+ZApByGOyeOk/1rN7585nCQY83PjgHbQNvbxyfFuEK2JfQ1nXSTax
      zvrcCuYlMWdfewt11ISssh3Fk0DAM+MA6aif9995h/aBAxTSCdKpNNF4kqr6BhTZKIG4QEtj
      FS6Hg2wmRdhlxZuVkYt7iaWKnqRvQyjgQ1fVhEqcoEwp4c6jETZtEeSSFL5oCqW2jLLSElrr
      6lApBVZX19hy+VGVlKGVaunpbfqd2hv3WpBXtiEtFFApJRhWjNjsLuL+DShrQ72b6dJSJa3N
      9dQ3NyPk0vh8XgqFHAZrgJ6WKiqrm6ipq6a6TEU6nWVpzUdf16+fRs9YAuWYnphmb18P45NL
      NFfKmTJ7qCprploVYG7Nw8EjwyxNTyGtaKWvRkBUUsfUyDhynZbjp85Tpn5OfMN/gAj5LE6H
      A7G6lJpyHR6HDXlJFSHzDOKWYUoyfuJ5GfW1VYhFkE4lEUkVRH0OUiIVddXlX6tBxE6RSSVB
      Ikcu237q57MpMgUp0kKKglyLYpcXA7l0AofLS0VVGdMzRo4fGyKZzKDRqBAJAgGvkyRK6qtL
      ScRSaLRPusQX6wH+sHjehLGeO4TthJGvK9T1BS9QPp8vFrMXeaH43ATI5XLFSHCRF4pisv9z
      iYDLus6qyUa+kGFteeFzwliZRBibywdA1O9kfnGVeCZHyLPFwvIa6V0UxgIgl2TD+mvplZBn
      i5mZGRy+KJlEBJvTC2wnzs0vrhBL53bchHw2hXF5Aac/SthrZ25ugVD8U/kVgYDLyuKKiZxQ
      IODeIhjftsHv2GDZuEHuySV6ZoOMG9euks7nufHRrwjEfz0Ar3GCUeMXGx5Y1laJ/MZAkwEL
      //CTf+Dq7VHuv/cxviev29cWCaW+zfC/20RsRuYtAVRyCZaFGYIFGaaVaSLJPJDHYrGxZloD
      cmzZ3KgIM2ewMDk5j6LgZXoXhbEAVmcneDg7/+QvAfPKKoqSUpRyMVtWG8ZPbdtyoxLFmVvd
      6RoFAcPUKGFBgZgC8UQajVrGxPQ0AOmIh4n5ddQKOel4BJd9mTVbnGxwg8dLTtRKGZ+u9J8x
      AQSCbgebGxtYbU4iDgMmb5rl5QVSiQiTI3f4+OZjwr4trnzwHhMrFmKpJOLf2D48uP2QU298
      n1fPHSUb8fLw1hUezKyRiCVJBCxcv/EJ7334CUG/m48/fI+7Y0vki1sQnH4fSa8D48YW+opy
      LIZFYhkpCrkYkNDV24dOLQMk9OzpIpkU0dpYg1KaZmF5i/Iq3a7ZlgjYiCsaaXjaqSRPNBJm
      dWmJaFqgY89eSjTyp7alktvu8h1FKGDz+PGYVnD4o+i1MhbnF6is2Xb/xsJOgv4IK2smCvIS
      9na3IwbcWz7SKQ/LaxYy+a9QhgMo5DKEQyGSmRypoA1nJIvVukleENO17xgK1wof3byGI5xm
      1bCGZdNEKvv5R28eEItEiEQiREg5cPQw9tU1bKY1/AE3SWU91fIAJrOFcDzJ5KNRksUtCDq1
      lq4Dx2nUxHk8t8GRs69SqcoST/zmUkJgcWGR5r37qS8TSBRqeP3iAbZMzl2zzba5xtrKDBOT
      cziCCSjA3mPnuHzhCMtz8585UmBxYYGGPYM0Vuz0hBRRXlbFiYuv4DIvkZOWcun1izit68C2
      Mlxbbz+H2iSs2hJP/0unV9PYc5iuCglOfwT4ipJIXUUt+/bvx7NpRKkrZf7+VaTSPP0NetYn
      HqKU6jnZU86jBQf1tTUI4ST5tJ/ZzST7B9oBOH58mPc/+CVVDR3I5GqUcikqpQKZVIFUKkOj
      VqLIq0hHAyQFOWUlFF18QF37HlyjD4nKa7hwpp6HD+6gquki75plLtxBZm2SDV+IrExD2uXC
      vPUxrf1HaK8Tc3N0k6OnTu+abd0HztF9ADY2N1EG1piLNlIa32TU5OXo6ZNM37uJ2RMgLVaR
      d3swWa/QvPcQwz07mJohEtE3uIcHd27Q1n8Ur3WZJbOH/kMnGHlwnwPHjqG3jjHjkHN0X4yr
      t+aI5pXUnTmN2j2DJaPl1MC2ityO1gP4THMEtJ101xQbXuwG4VCYklL9c3OTiEbDqNUlSJ4j
      YaxQOIO+VPO1rlGxIKbIC80XJkAxCFbkRUIs/o1s0D/UXk9Fivy2PGMTnGf81hU2A2k6Bg5z
      YM9X6f/kSSayWC1rNLb3olEUk+C+LdmIiw+u3UVd0caBPeU8HJkhJ9PxvUuvopYVWJgYxRws
      8ObLJxm9/j4md5IjFy/hnr2J2ZPk5Otv076LjQf965P805iL/+nPLkMhx/TIHdbtPuq7h8Bt
      xB5M0D50AmVwleWtKAfPXKCjZgcl2wWBlcn7LG640Df00qLwM7Vqo3X/WY73N5FJhhi7/iHS
      vsscrUvzk19cp6SiiuOHBnk8OkIkK+PS65eAZ7pB82y6wrz+ylnmHz3G53Fhs9vxet3Mzszg
      DMSwmVeYmprBF/ExPWnAsLpIIlPcP+wEmxtmymtb6Ghvoqq+nf7uNsr1n7oSJQwcOklduRKE
      EDllN3/69hmcdguCupW/+ONzWNd2LxCWT4dZdAl016m2XxBJGDrxEmdPHkIjE0CupqW1Cako
      yoYtTnd3F5Ulqp01QiSivW+Q9qZ6NCrwJTT86F/9CZnQthyMXFXKqZOHkEjEpKJRtFXV9A3s
      p6qmnsuXL7O3rebpDf2ZcYC418J7H1xDXVvHyq33GFnzkA45uPPJR/yXX1xHrlIx8fAOkUwM
      07p7Zwf4oiMSo9GW4N6cY8ufRldahlwikMv95g1GhCAI2wJUYhEIhe2fXVzKLo7eZHl1hbGx
      aeyBBIjAsbaAK6FgX08jglRJWYmGWCyOTKZGp8zxeHx5xxtliyVyyiurySRjfBrW/bJRyyua
      ONTXjW9jhg2nn8mJRVp69lGm3S7zfeYEUGgrOHBwiIRriwwqhg7uxzA9z/BLr6BXgGHsJqW9
      p6jUFOuFd5rWtnbc1hW8URFJj5GR8Wk8oSTZwCYGR4Cxm1cYHxvn0UIAtbDBP3/wmJamNhR5
      J//4ziM699Tvmm2DZ/6I//7f/AUXzp+iPO9hdcvD+NQMqzOjjC3bEKeCzC4ZkCuraGmQMzNv
      pLx25yPB8+MPmJydIyfSUleW5ef//At01e2sLC4Qibj48Mp9xu9eZXXDytzUNPZgDsG3wZLZ
      yO2bd/HFtttNPaMeoMDW+iqecIra5k60QgJZRS2imIf1LT/68koKMSe+SJ7W7nZy8TxSaZaS
      sqqimO4uYjevUdrcieY5EcZyWc2oq5t/dwX4/xJChvV1B+2dLV+rIKhYEFPkheYLBTHFTvFF
      XjQ+NwEKhUIxElzkheKZ6dABt52NTQvB35DdDofDFJ8Ru086aOXGozmEfIrHdz7hzujckyKO
      Am7rGo9nloE8C6N3eO/DqziCCYRChoe3bxNM7nxf3k/xWVd49913+cU77+FL5AEBp2me9z+4
      gjeWxjg7ykfXbuOPZxCEAuMPb+Ha8eIPgbDXxsPRSXIFCNjX+PCDD7H6tnv/xj0b2zb+7GdY
      PEEe3rzCzQcTpLJRrv3qXT745A6x9FemQ2e5/tEHeFx2PvzgFpnPvHP94yukP/N3wruJyR3d
      4QG+4AhZpmdNZDIR3KtzKNsPcfpQ31NNe4mqDImQAES0Dx7l5N46Np1+fFYjDn+cdGbnK7A+
      pbK5l7fffouWuipKlBLIpTA64rx8/hArE4+wRBWcP7yHVcM6EbuRrVCSRHwXJqREiVIhkC9k
      Ma67OXvhNObV7U7xmuo23n77LdqaGpDEnKga+2nRxHFt2SjpPcEbr5xD+0Sq4pnb92wqxsbG
      JtqqDszjt3gwt05V5xEEwL02yb3HRvLpAicPVOOSdmEwrHKqRcxMWMv6o0eIJDGUFc3E0mL+
      uz99Y+cvwHcY+9oC8upmhC0TrnAW69p9DDNyXnvlZUpUUiqrKtm0bQJiEh4TI4s2+g5WM7fk
      oblKQyKVAf0OB58+Q9y5jLS6F7kYhFwehVaLUl2OVKmgTp3mxt1R0FcwGYCOuhISqTQCuh3M
      YhWhL69EYdsE8ogUOjQqDdLPyK+kAhYEfQvlZTIWHo6whZLj9SV45x/xc4Ociy+/DHxFHEBT
      2cQbb10maTMzMTNPRWMHdeXb4XWL2cbBl16hRiUmn8uQzeVJplIk4hEyuRzKimYO9newZ/gc
      GlFox4b9oiCSyIm4N9mwbFFWUYW6qo4yjZx0Iow/EmfTsIxpzYTZYsERzNBYrcFudSKViVg3
      mbC5/LtnnJBjwRRlsKOMQjpKIAVCyMno6D3E2gYU6lIqSrU01zWgVoowGtaxu3z/8ud+MyNw
      W9dZWzOxYnajyPkYGR0lL9US8PvJFfIYTW56OuqIRvwotDXoVeAOJmlsaqZULSXzJGvhGenQ
      OR598hGueIGa1j72VOa5N2Ggec8QkoSP5gY99x/PYd8K8/abh4nLGvEsjZCXKajt6CPqDdNQ
      liOv78C1Mc+hg0d2+AK8AAgC8UQCjUaN3+0gJ9WSdKwiad6HMu4jls6iLilHmosTywjU1tWh
      kIpJJxNI5Eqkkl2Kxwh54okMao0K28oM+epu6tUFXP4YDQ21RP1uYlnJU9GuTDoJ4l+LZu2Q
      EYR9bgLRJFKVjroyNU5PgOq6KmbG5zh49CCZZAqVRg2FPF63k5xETW1lCR6nA5FST3W5Hq32
      t6wHiPm3uPdwmpbBo/S11uxm5L3IZ3jehLE+/eo8N1nET4Sxvu41+kI9QDEOUORFQqlUFiPB
      RV5cvqJBRpHfJ9lUFKNhHWVFIxXyFKYtD8jU9O/tQSEVE/Ha2HBF6d7Tg0oqwmnfQl/dQMy9
      wZYnTFNnH9V65e4ZmEtgtodpb6l7+pLXZkJZ3oR9Y4V4Kkd5XSslRNh0Bqhv2/PUgfJ7pZDD
      ZFhBVd1K/ROlimfGAX72f/xvjJiDzD68hdkff/pOMujC4gyR3Jrh6vSz23G6DVOMLtm+0p65
      a+9jSXzlIS8k6WQCqVKLdWGUsKCirLQE+4aJbAHIRxmdMCDPR5laMpGJufng6jU8gSTzy6uU
      lpaikO1uQuLK1GPuTs0+/TsX9/Dg6jsYgmJ0JXoUoiQWu5+5pWVKS0tRyp+PXhE2wyyOaJb5
      sRHiT7a6z2yRJKqowTL+kEZ9Dlkywq2Pr5PSNKILznDbAH96sZ3Z8RWi9lounRnkwd37SKu7
      adElsTmD6NVK4vIM0/evYvILnL94iLGrI0TzBc69dpbFh3eZG5/npYFjfHTtHmUdQ5zY1/m7
      uxrPMdoyPZ6RUcKSKuqqK8lKE/ja96KRi0FQoZfGmF3xM3i0ibkZI4eP7kcEJIJO5hZEHKus
      Zwfrrz5HPGAlqmymqdQCgCDkWVoyceBAPz6xlIaGVjzWDYYOdzH6/iNmFwQO66sp0+7iE+lr
      EkgX2Ne/H/f6GJEnM+DZSyCRkr4mOY8WAvTLH3BvJUy1Ls7rJ/o4XF1FQ6mHpj0HkNonmJ1w
      M7+VQudfgcoUirZz1OQ3CKQTWK1e7Bs2jIP1uMMKhuojzE+PE9Ht5cjeMKl4EH84gSadeaYp
      LxqJaJpDFy+x8Og67kiO0JqFzqET256NTJiAuIY3Xq7j7sQMAbeP8KybxgEZx879EVqRkwcL
      NupOdu2KbVsmI0ajjw3rFnv3H6NGncVoWCEZspPp+v/bO6/nuM70Tj+dcwIaOWcwgBGMYibF
      ICpM8Hhc9nqr1t6qLV/s1V7uP7C1u7W1e+Eql2scykmWRtIojZgTSABEzqmBDmgAHdA55+69
      gMLIIilphg1Tw36uyG7gnLcb5zvn+773fX+/BvZryonJ69FJMuw/8RZqoY+HizYaTvQUJZ7v
      g6KQZTMUxuuNUdG99ZR86gCQyWS09hzk02v/D8PZn2Gc66e6pgZ1WRnWew/pPNWBWilHqlBQ
      1dSCyjRBbW0tMqmf+ioDws11pJkcbl8IfVk5UpEItVqJVJ5Ba6zF/PABm9EIRw6JkIkFzJuW
      OXt457Z9GS8y2USQ+3duo6vtokYD2aomymRCvKYh1uTddFcJuPFojqOnzlBrUOLd3ECsNOJa
      HGLAmeTM+TNFi6370AW6D4HZakHuW2Q60sTP/vTPSHrM+OVtBENr9OxuAYRE3EsMrIZ45Uzx
      4vk+tO3aQ9/du+jbetFJtzZKS7tAPyCCgSA6g/6FyQOEw0GUKh3iF0UY63tSaogp8VLzjW3Q
      kjJciZeNUgNviZeaJy+CC3lWFyeYNns4cOwEdeXq33yTZDKJRCohmykgkz1bFWJ+ZoaOnh6e
      /lNp5qatdPd08QOdSj53wpur9PWPkRLI2NfdyNT8CqqyOs6dOoREkGfkwQ2sm1H2vnKRlH2E
      ZWeSQ6fOErQ8ZiNRzpXT+4sWWzzkYuz+DTRH/yP7qgRQKGCaeMiU1ce+Y6fJuU0s+zK8ceEE
      o/c/w+yKsf/Uq3TWGp5jFAWWJweZtThQV3fSWZZjcNnLH73xKgCJsJNbNx6RRsyJsycY7rtP
      WqDh4rn93L7VR0Gm58rlC8DTBkAuwt1HS/zBn7xFKhrF7c8jTkeQ6CpJRr04V+1oNDk+uW7h
      Z394nk23C5m6nOYqNctWJ80dncQDTrJ5CbPTs9R3NLO8bEFT2USZNIPL6weZnqZqNUtLMwwM
      rdO5uzQAvkBT0ciVq+VMTcwRCEeorm/E53ESjmUpl4VJq9r46dVyhpZNBBwpOjrbMKhlNB4+
      Tnr0ebuxfB2lrpqTh3cz+kXJWC6JxRmho72dSr0GXe1RohOjUAiRlrTwszfLGVz0POcBAO17
      j1FZ72TZEaapuxtPbOzL93LZHFpjNTLSODwe9h55FVnSzNiIld4Lr5F1mwgEtjKwTx4AIg2n
      jrTx8XvvsfPQYZbn7CiTdvQ9+9m0hZFlXew8sAOFQo1CLicTWGNmLcbcgyHM7hjGnosklq7z
      6s/+AgGQjPoY7LvPRkrLG3t0eLRteOfvs6wHQ+dOxMLSlf+b5JMhxuYtdO3eh1YGGw4XsYAL
      gVAIAgGFfJ5CAQQUkEgVqGQphsdNnDve8u8QbQGRVI5WLWNoeISLZ45//rpgS7Dr8wrW54uA
      oGMFa0jA3l3fdKHPp5NI1XpUaTeBeAaDZks8TCiAfKGwpaMleJZTfCZJTKBk784GLGtRpBkH
      kvpWHP19VPVsWdFrDBXIxTlyqQADU05eOdiNWGHg8k//mMuHuyira6WzaatUenV+jpp9J6lW
      C8kjpLq+Ea1MRCadRyQWPHfVsB86G9YlzKYVHvQ9xOVyMD42ikDbiDyxxrJXgia7xq+u91Fd
      u4u6GhHTsxbKq408vv0ZY2MDjC48vUTldyXitfPp3THG+m6wbl3B5EnTVqVganoOQ0Ul4w9u
      MzYyRv+0B7XQwXu/HqC2rurbD/x9KOSZGh/HujTNo7FZlsYeMjY2xp2BKRbm58hLFXjtS6y4
      InQ21zM/dpehxSiHj3Uwdfc6c7Yw5WVbHXNP7gco5HDYrXgjWdq7OskEHKRkZWQDbgwNjcT9
      XrRlFTgsC4iUWrybXmSacpoqVaxY16loaEWYiVFVVY3H7UatkWOxOtDoDBhUYgRKHclgELVa
      wrJ1HbXWSFNDNaUHwbNx2szo6ltRviDCWO41G8qKejQvkDCWxeKipbXhO/UolAwySrzUqFSq
      r+cBxGIxItGLUblXosR2UMoEl3hpeWZDTCDgR6czIPw3E/NYKIhUo6fIJecvNamYn/4HD8mq
      a+mqkjA8ZSIpkPGjN66ikQtZnnjMzKqfI6dOEVgex+LLc+rMCfzmMSZsES5cOIdOsV3z8gLr
      S5MMz9rYc/wM0pCF0fl19h07jSbnZW49xpmje4saQdBloW9wiq7DZ+iqM5BNRLh549ckC0bO
      X+plou8hCZmRY3ua6X84gNTYwpljW7mSp17GH7z/9hMNL4Y++wjz+ioWZ0nupFjkC0J6T12i
      RhxC3rCPP/jJG7TX1SCTiiAXw+zOcuHYbqzLE6yFdZw/UMfMig2rK8WlQ3VMm7bRr6GQwWTz
      cfHyWWxLMyxb/bx6/girVisCqQqZoHgiXVvnTzM1beHMa2/QVqUFIBmPUNPRy09+fAEZQva/
      coEWRYwAei5cuYo86SKU2pr4PPM+HrCO8Zd/9Q/8n//1V9jX5/jbv/l7JlachF3LOPwJHt/6
      gP/7P/8Hs85SW9fzRK5Us2GeQlLTQ4UC/Btm1DWtSIUCEMgwSKJcuz+MxthOoy7Ezb5hPAEf
      CmU5qgojhXDs20/y3BBh1Aj47LObqAzVGLXw2Y0HKLQGjJVViIqtGJHLEPBvcuvj97kzvKUM
      J5IKWZ0Z5e23f0VSpMS9Oku+YhdNZWJG718ngg7l56UJzxwA+VyOph2H2VWuxGq3037sIj3N
      leQzaVKpFEu2dcoVSdZ9z1v78eXGsTTGkiNGPOIlmcmyZAvQ1WwklwzjniVRyAAAGp5JREFU
      9fvxJUU011fg9QWQa/Ro1Xq62zqI+0303R5C0/icDSmeRT6LN5yiubkJ36YdTyhLS2Mdfp8P
      +/IsJtMSJquzeLkesZzmxlpqGxspZFN4vR5yqQyVLa2UywvYVmaYtQZJRr1srK4iLaujkA4Q
      iW89mZ66CB7of0B3SwMbMRUirw3jjkYG7zxCIFbT09NIWlKDe/Y+8Rw0HrjEztoXoOn594Rk
      NIjD7UMgllJbV0s2mUKlVmKdGkDY1ItREMYTTFBdW0vc7yRekFNbZSQVDeAJp6mrqUS0jUmV
      ZDSI0xOksrYeUSaC0xumqqaOuN9BKJ5BoSmjptJQtD6GbCqOw+WhvMLA+ISJY0f24nE6ECj0
      GJTgcHopiCRUGsvwez1I1QaqyvUIhaV+gB8UL5ow1gvH58JY31Wo6xu7QLlcrmSWXeKl4msD
      IJvNljLBJV4qXpAijhK/SSGfwbayTF5hpFyexrbuoSBRsqu7A6lYiM9pw+4KUtvcgV6awRPN
      UV+lYWFynmShQEV9G/UV2u0JNp/DurJIMJZGY6ylTidiZdVFQ1sn0nSAlXU/bR0dRTVQjwU3
      sax5aOnqRi0VUSjk2LCukFdV0mBUYzMvg6qS5hodFpMJkbaaptpy4BnCWB/901/zzjtvc3to
      oWiBl3gyEf8m8YyQTfMEwZwCnV6Lc9VK+vMa/MXFRTQ6PTKJCLvVzIplFRCi1esQx71shLZx
      V04gQKXWolMVWLE42Fh3IpcWmJydZ3h4AoU4yei0uXjnz6cYG51FJoWxiVkAIptWltZDLAw/
      Ztm2iCuYw700ytj4DJ5kgTXTBP7oMx1iCuQkWt547RIu+wqm6cd8+Mk1XMFNHly/y+jUHNPT
      C0Q961id/uJ9uJcUTXkttUY5IlUdtVXlVOlkVDV3bQljkSURDDA7v0gslaVjZw9quQQQU9fU
      QFKsYU+TcfuCFQiprG0gGYxx6Og+2jo7ySbTNDY0oFPB9MwKGkMRn0YCCXpFjqnZRTS6rbt6
      JuqncVcvB9u0xNCzub6IKyamub6MDcsi/rgQhXzr0n+6U7x3jU9v3Gd3TyvXP31IMuTG5nQw
      t+Bg185m7LZ1EmEvbn/JHul5E/WsYfPl6T20G6kArGY7re1NW7s/uTx7Tl7h1SNdLCxbvvZ7
      Mb8TsaYG+TbXqeQTPoKicsplBUxzMxiadtBao8QbUfD6lRN41hzFywPkknhScl6/cg73hhUA
      gVRByLvJmjtOPuako/c8XcYso/N29h2/QL2+QDCyJcT21G+qrK6dt370E/Z1ddLSXI5YqadM
      q6K6rgGFREoyYKVveI6CoFQ9+rxJJWPYFib59NptQokU6opGDDIhvpVRphwJIs4l7o6Y2ber
      jaH7t7GsLDI8t0oqnaetrWHbt0lj8SxdnS1AjpDPy8C9G/RPbbCzTc+Ne5Ps2N1ZvJOLFOxo
      1HHrzgA7e3bzsO8hmuoOcM+QrmhnT0cXnqVBNoV1nDmyB/tUPzFJNZU6KfBUh5gSLyKhYAit
      XlfKAzyNXIpgPI9e89380UoNMSVear4xAEpJsBIvE0Kh8OuZ4BfG66lEiW3iqYvgsNvKRx98
      wPiinfxTHgw20zTB+HedMhWIBZx89uEHjJs2vnOApsVZYqki15S/YITcVj765bu88/5HhNLg
      WHjIX//y3ufv5pgZecRHN/uAPIM3f8U//eO/sOzycPODt3n3X9/F5iteeXo86OT++79g3PnF
      RVFg9Nb7/NM7v2TG7GJ+rJ9fXb8PFJgZvMU7736A2R0qWjy/K08eAPkEH310h+OvXsY8chuH
      x4M3ksbr85LNJFmanWTdE8K2OMboxCQOX5RU1M/U5BTBeIaId4PJmQWSma8M9wqFAtc+/Jhd
      py/TWafDZV9hYmqeRCqBzbLM9MwCyXSalfkZFsxr5Ao5LAsz3Ol7RCQaYXZyAqvDy8swS9NW
      NnP1zSu01VSSTwUwuQs0V35RbSui59AJasrkUAiSlXfyxz8+jXPDTiqnob3NwMJc8WRRlPoa
      zhzbS/bLP22OSExAR1c3rQ2V7Dz4CnVGJRDDuh6js7MDo7Z4pt2/K0/OT2fi5GVG9GolNRol
      Tus4TsleBK4RGpVJ/vXuAml5Ba/vkiJTSPnoVx9QJfQysx7E2LKMOpfm+MljX79YCxDIi6g3
      KBEVskz3jXHzwSAbr/0H1lZtdGpixKUqVgf7GLds8vMrR1mKGZFJxOQSAR7du40pKuN///f/
      +ns/VcsnQozMrrBj7wEW77+HyZPB7Yiyr3cvlSrZb/ykgEKhsLV2E+o5ebYWn9PEZk66jdGK
      2HvsCL6An/7HY1w8dejz1wtIJErU8iyPh+e5eHrfC7l79eQBINWhF/qYnJ5hwRPjzd3NzMxZ
      yAYCNLVo6D19hd0t1bhm70Ahh0gkRizXc+VHr1FtkHDvzhAIIBULkc2p0SgkIBDQopPQPzFH
      nUbC3EaUK6f3sZrKoCmrpKE8xIp9kbCmlQOdkEqnEQhFQAHH0ijanWdoNI++FCJaa5Z5lhet
      ON0+zl34I45IUgxOmNHEN1gK6QnOP2ZkyUJGWo6yYOVfP05y4tIVTNN3MbkyXH7r+Lef5Lck
      4rFx5+YQ6xI31cc6iUvLCJmnsbtDtOw5xsjd6wwvrJAUGWiqkzI5baJ574mixfO78tR+gEwi
      zMKiCduGj9NnX2F9xYJUX05zTRnmpSVQV1KjymN1eKhr3YFGEGNpxU55fSs6QRSzM0TAvkTz
      kUu0GJUA5NJxlhZNaKubEEQ3ieWE6MsrKRQKaCRZ0kI5bpsVkUpLXW01q6ZFcnINrXXlrKys
      o9BpaWus/71/AjyNDcsy+sZ2VC+IMJbLbkFZ2Yj2RRHG+p4U2SCjQDqdQSKRlpzkS7yQfKMh
      phhO8el06rker0SJ58nXBkA+ny9lgku8VDzVJ9jvdhBO5qiorv3dmhkKecKhKGq9tmRH8x1J
      xwIMPBogp67hYFcVAwOjqKpbeaV3N2JhAfP0CHP2AL2vnEQSsTM4YeXgydPU6iX033/ErmMn
      MSiebVzy3PjcTGXK7OHIyTMIghaGpm0cPHGWqG2MeXuIvUdfoaVKX6wA8DlsLKyHOXF4S4Ar
      FfXw4P4gaGo5eaiD0f5+kjIjR/e08HhgCF3DTnp3twLPaIi5+enHONbMfHKrnydNikZv3iHw
      XeLLp7nz6zuUhFO+O7mCkIMnzlMtDhEVlXH+0kUEUSfxTAFycSzuLGcP72DVbmVqwcnlq5eo
      1inw2k04fDFS6W1MHOaSmF0JLp0/zvzMCCZLkHOnellZXqa+cz/njnSwai+uUJdQpkEs/Mpn
      WizTcPLVS2gSHgJZAXuPnqNJEWN42kTX4TPI4uv4vs0oWyxX0dhQj3XTxM0P/oVAIkvrgfMs
      Pvhn6jt6mXj0AJtYiSwX4/LxA9waM1OTc7KwGScjquJQQ47+kTm6z71V1A//+4hcqcI0N4mk
      ehe1ejEDN6+RUtQgEwlAIEUviXLz4Rid+3eyMb7Jrz96n6qOPcRdmzRWqIgn06DbpuSTSEF7
      jZIbt/pIinI0lrejVKkQFvLkIg7uDi3SsefIllpDUQIQYCg3IrbbvgpJJGS2/z5+kZp9ShUb
      pkny5Ts4USHmQd893OEoxo6tm8RTZyWpaIBFq4fL53sJJPS8fu4Qq+vrCJRGzp4/x76OTo6f
      OgqpBOl0kmg8yfxGkB9fPY0om2Vx2YpRL2b9BU6Dv6i4lidZdsZJRHxsrK6iqKgnHfcRCwfx
      BQIEUiKa6oz4/DnqW400NtaSi0QQSwSsmM2su3zbF6yggESupsogp6FpL8LkBgODI4gUUtac
      URrrynFubBYxgDwbliXMy2aWVp34fF5CHhcCjRFl2sPCwizzqyGSMR+xdIGqmhrKDZWUPbsf
      IMvk2CS79vUiEeUxTQwwbw/Re+I0Tusch3qP4DKNM7aept0oYMURwlDbQnVhkwmTlc1MNUca
      cvjiOQwte5GEPOw4tI/tzE/+kEnFQjg3/SCSUFGux+f1IteUEd9YQNS4nzIieENJqmqqEWXj
      OD0hKmtqkEtEpBJxRFI5YtF2rbgKRAJeArEcdXXV5FNRXJ4wVbXVJAIeArE0VTU1KKTFyhXk
      8btdhOIpZAoZNpuL3v072HS7ESn0lKmEON0+EImpqijH6/GgM1ajVcqefz/AhmmC0SUXh0+e
      plqvfCFT3z9kSsJY38L3FMb6xgAoRh6gRIkXFblcXpJGLPHy8kyDjBL/fhTyGSymRQrKSlrr
      y7AsLiDQVNNaX4kgl2JhcYF4KoexrpVqjYDNSJaGaiNehxVXBLo7mrfVejbs3WB51YWxppFM
      yEUonkZb2UBrpZL5hRWqW7qoKOKuVCYZweGN0VRfDWzVnJmWtgSwOpuqcNvNeBNiurua8Kwu
      40/L6GpvAp6RB3j/7/6St995l6E523eLIuHko89GnsPHKRH2uYlnRLiWx1ixOYgXJNhMU4QS
      ORAI0Wj1SPJR7E4/NrOJJbMNCDE+bkUQWWXW9p0yNM8N29IMQpUBpUKGWqNDKclhW3Ux+OAu
      AoWqyGuWPOurduZNS1++kk3FQKJkY2II85qFsWUnSpmEqGORkRU/Spn4y1L9p2aCUzkR+w/0
      UlFZzuzju6z4C3RVVlC5txP3jIUyo4D+xzO0HDhJRWadoalp3KkmrDOPGV1c58DJs/iWZogL
      VLxy6hDblJf8vUBrrKMulyYar6e5uZGw00oyUY1KLgShiPrGZjbXrOzd14pW1EBoYgGQk4s7
      Ma3lIWBkX2vZNkWbJxqMsOqcQq09TUd9I/4NG3sO9DD04RTuyAwCmY5ynaJIA0FIS9cuPJHh
      L1+RqXSE1odxCzXUhd1EN93MFwTUaPJkAx7mV7a2Q7d++ynksmmCAT+JiIu+KQ+Xz79CdN2K
      PxphYW6F9bU1YhEXtx9OcK9/nPMXTqEQZhkYX+b8mR7u3nnI/OQC3fv3li7+70lgdZp//tU9
      4ukYm8uj/PNHDwgm4qTCXhy+OEH3KgJ9E1pJjumhR4yPjTKz4qOtq43qijpa2mq2MVoB3fsP
      UKVXY7evEfO7iMoqqFJKaWprplyvwbm2UcQ+jhymyWHGx8YZnrWwsbFOIhYhL5EjzwbJKqqp
      q61AkAmSFxmorq0gFw8SjGzVJjxlEZxj+M5n2HwJmnYdwphzMbuR4NCOOoZnzdRUNVOtiTNn
      9WGoa6deEmDC4qKidgdN6giDM6scO3eOgM1O155diEtFQN+LbDpJJBoHoQilXEo8nqAgFBO0
      L6JsPYBRmkcokSAUQDQcIp3NI1WoEOZSZBGjUSm2sWeiQCaVJBpPodbqEOazIBIjEgrI5zKE
      IzGUag1ScbEE1ArEoxGS6SxicYFF0wYH9u0gFo0ilMhRK+Uk41EyBTEatZxENEJOIEGtVJQM
      Mkq83DzRIKOUByjxMlEyyCjxUlOanb+AFAo51pbnCCahkI0zOtjPqvsrX+ag28bD/scE4xlS
      EQ/9DwfwRpL4Nsz09Q8TTRXvJlYo5FhfmcOf+GrmHPM76B8YI5WHgNPKo4ERIvEYY4OPuHfv
      HgurxSyGg4DLyqPBMZK5rZgKuQyLU8OMzVvIJMKMDDxk2rRGJhFiuP8hsyvrXy7KnzoA3n3n
      H54oSOUzj3N/1PrMgKaufcBKpLS0+G1JhLykAmvYQrA4OYGhoY0N0zTRdAFI4/Fn6KjXM29a
      4dGjYdq6u1BKRfjDCTob5EwuOIoWWzLiJ+1fxfLFeMynGZtcpLFWzuPhCcZn7LTV6ZhasNK5
      czctNXqSyUzR4iETY2rJQUejgbHJLTOXZMyPSFOH2L2CPZ6nobWbhH2atVCOpo4uQmuzeGPP
      NMiAZDJJ1G3mk4+vMbNi4961j/nw2gMSmQzpbI6pgdu89/7HuEJuPnn7A959+z3WvV5uffwB
      j8YWyJXW1r81Sn0VzXVbJheVFWVMjzxm0b7x+YUkpaW5ig1PjLZmDcHNKEMDj7Bvhmlqqsfp
      StDZVlm02BTaClobqr78fyGbRlZWSX3jDqTE0EvjPBqZQWcwotZqCYYStLfWFi0eRDLUghiD
      wzM4PFtPGoWmkjJZkpSugaZyJfbZUdw5HXVVGqxTjwlktWgV32KQAZCO+ogKy2kRObk/5yLs
      3iSez0MujtXqxGdbwex2EUqp6amVszIzRtiwmyO7W4r3gV8ytDWtvH71Ek0VZSgUEiDD7MwS
      nbv3UKWvpKyumkvne1m3OZiZXaBzz0EqNbJvPe7zQiCSkAj4iATXSSQF+PIGXn/1OI6NdXIx
      B0l5LRpJEbdkhSJ6Dp/m3LEdlBu2Bn4s5MQegIP7ukmHY+w6eYE2TYSl1SB7T1+hShnHH/oW
      gwydzoBYpqa+thJFTQdtOiFagx6ZTIlaISaVyWGoqEIllWEo0yJXazHUtpJYHmDeEUa6jbUo
      v2+EN61cG17DOnITn3eTWzfv0r7vGDHzEFOrIeIRH7evfcr40iaH9jZz9+EC+w+0EvO5uXnt
      E6bMrqLFFvHa+fSxnbWxG8yPDTK5EePAzkYejdo4fvI4e5pV3Omf5eD+PUTDAnp6mooWyxc4
      Vqbon/dz4lAH9+49IJtKYVue5pNPPyUQS9F/5xpBRRttuix9t66RVTdTpS8ZZPzgiEajqNTq
      F6YfIB6PIZMrt9WV/pnkM0STedTK7/YELBlklHip+cYAKFHiZUIgEAhKeYASLzVPLocu5Fgc
      G2DOHuDA8dO0VOueeZCQ04IjqWFHS0UxYnzpiPk3GLrzKboT/4XG2BS3xxZAouHN16+gksLo
      /euYN1McOn2OJr2AX/zib3n1p3/O6sinrPlTHL74U7prNEWJLeK1c+/eELFcgVd/9IcY5TkW
      x0eYWovw86vHuXXtJoFElp2HT7OzTsXf/eKveeWNP6e7vlhewXlMUyOMWv388Y+uABAPrvPJ
      J/dIiPW8eWEPt271kROX8aPzHfzd+0M0NNVz4dxZ4GkDIBvhweMV/ujPfk4+FsLmzCJN+pBW
      NBH3u1CJMsxavPQePULYPs/gwCCKzrOo0husR8Xsa69gfmWdjEDB4X07XpxF0g8EVVkdp47t
      ZwoQiMTo9AZEEuVWhWc2yNpmksrKSnQqOcszw3Qd6EVEHIm+mz+9XMWDYVfRBoC6vIGrb+oY
      GZ5jy45YRPeBo0Ryw5DPkS4IKdOqMNusSH0ZOg8efrr41HNBSOfeIwQzX/UDxLzr7Ln4c3SO
      AcZWfRy/8FMEm2MsWvyoyvS0tHXyhXDek2MT67h6cT8f/ss/0t57jNV5G6qME93OHWxaY2za
      xsgJBHijSULBMEfbGlgNWfmbzx4jFwrJv9LBUrYTmXeY7q4ODKpSR8Bviz8YprV7N5vWBVLp
      LEqZEKWugl3tVQw+uI7NvAHECCal6MmRTSYRSIsnQJONBRiZt7LvyGGU//Y0Ug3nz58j4Nlg
      ZtnC7QEbAkEcd6eS1vr921Z3IxCKyKRSJJIF5EpIZzII0lm0Tft5ozXJ/OQwbuPWbOWpDjFr
      3iitzVW4vVkUOQfChk7W+h7S+tZ/IhNz0LxzD/UVWm71beBwRyno6qmqaeTQwR4qRQ6cGSPi
      mBReCkuL50vIZeHOnQm8ci8X9jcxMTKASFNJzrfCvKiethoRfY+n6DpwktevVrFmW0Cqbca1
      0Md715ycvXy1aLF5nFYsi4s4XW6O7GolJDWStI4xvmAjLlRhSLlYckQ4cfE1Lr4qxbm2RF5e
      X8SLP8vUo/tMzJkJ55SUSVLs7Gpn48Y1UtoGrvQ0cfv2DdA0c6zOy6MHYwhURnSf35SfvAtU
      yOP3uAgn8tTU1ZKN+slINOSjQdQVlWSjfty+CBU1dWQiHqIp0JeVk4v7CcRyVBu1pAUKBNk4
      KrW2NAV6TjjXbBhqm5CLXozvc9OxhspYi0parGaX70kuwaojTGN91XfypCiyQUaJEi8232iI
      SafTpYaYEi8VXxsAhUKhNABKvFQ8dYcq7HVgcwZpbu9A+wyzhYhvE6G2AtWXFX85Vk0mypu7
      UUu/ORFLhj2kJAZ0ipIm19NIxQLMDA9g3H8VuW+awWkzsayAN994Ha1czMzj2yw7Yuw6fJy8
      e4mlNT89R0+TWhtnaSPMvuPnaalUb1O0Bdz2ZWbtIc6fOMjS2CDza1669x9F4DVhcsboPX6S
      2jLVtx/qtyKPdW6C6WU7bXuPs7ulimTYxb0HQ+TlRs4f6+T6rT4kSiO72iuYnF4ililw+eob
      wNOqQbMRrl9/hEwqxB8IP/P0K4P3sXhDLKxsNcnkwk5u/fp97s892RTBtfCIOUcCgIjbjM1b
      PFfzHyoisZzOxjKCKahu28Nbr1+io6kRpXTLNjZRUPLWj9+iq76cuva9XHxlNz5/iPquA1w+
      uQP35rP/Zs8btaEatVwACGje3cu5o7txu62seUVcPrOXlWV7UfcCjQ2dvHbpLMHNrUYgqbKM
      85cuo8+G2fRHaTtwjKuXTtPctpO33nyNjsZ6tJ/fgJ98GxbJqdYLmZxf4eTpGm7+8u8ZMXn4
      g//8U5YHvHRVJUlVGRm6PUDSu8mx7sMsm23saG9hzbxM19k3WJ4cZDUr5tPZFGeP9TD68BbO
      iIzXjhiZGbzF5N0op7qUBKo0zN5+hymLmz/5i/9Gs6GUMxDLFCjlX30P3nUz+tq2z+UOc8gL
      CT58713qdx2h05BjwZFk//4dhF0WFl1Zevdtry6QSqNFJNr6dyqwwaMxE43dPZQbvFy/84iM
      vLmI5xciSIcZXnBzqHf/1itCmOrvIy7XoFApmevvZ2lUyNnX3kToXUFZ3Y7k853JJz8Bcnm6
      jp7nTI+RezdusRZX0l6jJhRLks1miMfipIMu1O3HOLSziS/3+gt5TIuLmOZMbDrM+NMFdh85
      Q7kggMzYgY4EiRzsPnyWeoOQRDpLMuzFX1DRYpQQim+jtc8LTNTv4NHQFBMjjwklUlg2orTV
      6cjFAzi9IbICGTqNmkI+zu0bfcTCbqwbbu7evE005Mbq8G9jtHkss+NMTUwxMr2Axe5EIRPi
      dPtJpDJIhVI6OpuKV8KdT/PwXh+xaJAlyzoOxwYB1xqRvJh0wIUvkkShNqCQisgVciythuhq
      +ko17/8DX3Rj70R+fDYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TreeConfirmed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TreeConfirmed (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAGu0lEQVR4nO3dS29beR3G8cf3S5340jix4zbubdoEph11gUYgsZjFSLBDLGDDC+IV8AJ4
      FaCRWMACIVWCDpSQtJNJOm2TtHHsxE7s49thMcN0Qq1JB7kt1vP97M6x/NPf0vnm/G1HciQM
      w1CAqei7XgDwLhEArMW/efDr336ijZ39d7UW4Fy/+uWP1ItPb9d+JoCNnX3dW388teHAtH3c
      +UDdxPQCYAsEa/FJJ3/64w/UevFC/3h2rEJCapwOlYpJwWCoW/WKxuORWt2RDptHuphLKZFK
      a++gqXZ38LbXD1P/+tMftHjze9r8+0Ot3rmhk6O2+t1TZYoVpVIRDU7aSs4XdfS8ofLygpqN
      tmrX6q/MmRjA1ud7+vD2JWULRfXax7qZn1d0FOr+/XW9GIYKnx2odrWiyqU1jZ5s6vLaFTX/
      eKD2G3/ZwJeKyzU9Wd/UwvKSDrY2lKneUnw01nhwqvbRgcaJvBr/3FCz1VDndKB8PjNxzsQA
      Hr84VOPPHfXHUZWzUR0+bigSkQ57oRJPnysMBoofBzrcWdcgCPTg4K+KxxKSgjf5moGvFWt1
      5RaqiiXikmpqPH2mi5dXFI9FNR4t6P4nv1P1/R8qt1TWxeWa4vHJu/2JAXSDgbrBl9uZ4+Oz
      jw2+Or/z9PnLkyO2Pni7kum0kun018e1925+49G0PvzZL15rDm+CYY0AYI0AYI0AYI0AYI0A
      YI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0A
      YI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0A
      YI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0A
      YI0AYI0AYI0AYI0AYC3+rhcAfBfFVErF7PQuWwLATDnuB+pFgqnNYwsEawSAmXS4t/fKuW7n
      WJI0CnrqB4PXmsMWCDNp0Ovp5OCJNj99JMWyWizn1Y2O1dz8veZXVhUNelr/9KFu3b2u4Siq
      xtYDLd7+SKvv18/MIQDMpHDY1WErqWwup+JSWQd7TVWu15TRmuIXioqMBrp1N6XKjRXFxkNl
      0jHlSrlX5hAAZlLlxtqZ48X6V3/ZF8ovz115+XiutDBxDu8BYI0AYI0AYI0AYI0AYI0AYI0A
      YI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0A
      YI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI0AYI3fCcZMyafSKlyI
      TW0eAWCmtAeBgu705rEFgjXuAJhJe4/WNYhmNDdXUKFckCSFo4F6/ZGikaEUppXKnH95EwBm
      UqfZUnoxpeeffaYvNgJl5+eUSMUVicS0/+ypFgolPdza1cc//8m3zmELhJlUunRVl+qXlM6m
      JUnxVE7VlWWNx2PFk2kNQ2mhWj53DncAzKRStSJJWrnz/TPn66t51b/DHO4AsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsMZvhGGm5JMpRbPTu2wJ
      ADPluB+oHw2mNo8tEKxxB8BM2t3Z1uCkp3FUyhdyOjk6UWG5psPdfeXyc9Kwq0i2pGJx7lvn
      cAfAzGvvfaFRLKaHf7mnURhoe2tP7WZLnVbr3OdyB8BMKi1VFI7GUkTSuKpIIq2lakXPn+5r
      7c4VnTb2FZ8vnTuHADCTUun0hJMprdzMSZIyF66+1hy2QLBGALBGALBGALBGALB25lOgH9y9
      rlK1+K7WApwrk0mqH/anNu/sx6CVeUXSkakNB6YuHpMG0xvHFgjWJgZwsP1IncPGxCeEw466
      p8M3uijgbZn4TfCo09ST3abmkg/UOompulxQfxzRhcVryqVP9GLzc+0+eqQrt29oGHQ1ihfU
      2f6bUgt1Fas1zS3XlIixlcL/v4l3gOzSipKxoZLzJZXrK+p2Rwr7A13Ip7T/cFvpfE61tVVl
      Sou6eLmuQedY89UVla+9p6PdJ1z8mBmRMAzD/xz85t4DbbXa//OwUa+tYBhXNpeZyuKA//bR
      tbKOBt2pzZvqP8PF0nPKTnMg8IbxKRCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs/RsX
      xIgxUV966gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='TreeDeaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='24' name='TreeDeaths (2)' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAAS0lEQVRYhe3QQRHAMADDsHX8Oacw9KiFwOezbd/Dfh2gNUAHaA3QAVoDdIDWAB2gNUAH
      aA3QAVoDdIDWAB2gNUAHaA3QAVoDdIB2AVXABCzFbDFLAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
